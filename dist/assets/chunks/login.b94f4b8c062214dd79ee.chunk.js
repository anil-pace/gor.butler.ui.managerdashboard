webpackJsonp([1,5],{

/***/ 466:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(415);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(419);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(420);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(421);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(440);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = __webpack_require__(20);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(53);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _loginAction = __webpack_require__(376);\n\nvar _reactRedux = __webpack_require__(191);\n\nvar _appConstants = __webpack_require__(371);\n\nvar _configConstants = __webpack_require__(467);\n\nvar _reactIntl = __webpack_require__(217);\n\nvar _reactIntlRedux = __webpack_require__(214);\n\nvar _dropdown = __webpack_require__(455);\n\nvar _dropdown2 = _interopRequireDefault(_dropdown);\n\nvar _i18n = __webpack_require__(240);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Login = function (_React$Component) {\n    (0, _inherits3.default)(Login, _React$Component);\n\n    function Login(props) {\n        (0, _classCallCheck3.default)(this, Login);\n        return (0, _possibleConstructorReturn3.default)(this, (Login.__proto__ || (0, _getPrototypeOf2.default)(Login)).call(this, props));\n    }\n\n    (0, _createClass3.default)(Login, [{\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n            document.body.className = 'fill-back';\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            /**\n             * Checking if the user is loggedin \n             * and redirecting to main page\n             */\n            if (!nextProps.loginAuthorized) {\n                this.authError.style.display = 'block';\n                this.userError.style.display = 'none';\n                this.passError.style.display = 'none';\n            } else {\n                document.body.className = '';\n                this.context.router.push(\"/overview\");\n            }\n        }\n\n        /**\n         * Checks for the changes in the language selection\n         * and dispatches the corresponding action.\n         * @param  {String} sLocale sLocale has to be of pattern 'en-US'\n         */\n\n    }, {\n        key: 'handleSelectionChange',\n        value: function handleSelectionChange(sLocale) {\n            if (!sLocale) {\n                return;\n            }\n\n            var data = {\n                locale: sLocale,\n                messages: _i18n.translationMessages[sLocale]\n            };\n            this.props.updateIntl(data);\n        }\n        /**\n         * @param  {[event]}\n         * @return {[void]}\n         * Function to handle login form submit\n         */\n\n    }, {\n        key: 'handleSubmit',\n        value: function handleSubmit(e) {\n            e.preventDefault();\n            var formdata = {\n                'username': this.userName.value,\n                'password': this.password.value\n            };\n            if (!formdata.username || !formdata.password) {\n                if (!formdata.username) {\n                    this.userError.style.display = 'block';\n                    this.authError.style.display = 'none';\n                    this.passError.style.display = 'none';\n                } else {\n                    this.passError.style.display = 'block';\n                    this.authError.style.display = 'none';\n                    this.userError.style.display = 'none';\n                }\n                return;\n            }\n            var loginData = {\n\n                'url': _configConstants.LOGIN_URL,\n                'formdata': formdata,\n                'method': 'POST',\n                'cause': _appConstants.AUTH_LOGIN,\n                'contentType': 'application/json'\n            };\n            this.props.authLoginData(loginData);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var sel = 0;\n            var item = [{ value: 'en', label: _react2.default.createElement(_reactIntl.FormattedMessage, { id: 'login.lang.english', defaultMessage: 'English' }) }, { value: 'ja', label: _react2.default.createElement(_reactIntl.FormattedMessage, { id: 'login.lang.japanese', defaultMessage: 'Japanese' }) }];\n            for (var i = 0; i < item.length; i++) {\n                if (item[i].value === this.props.sLang) sel = i;\n            }\n            console.log(item[sel]);\n            return _react2.default.createElement(\n                'div',\n                { className: 'login-form' },\n                _react2.default.createElement(\n                    'form',\n                    { action: '#', id: 'loginForm', ref: function ref(node) {\n                            _this2.loginForm = node;\n                        },\n                        onSubmit: function onSubmit(e) {\n                            return _this2.handleSubmit(e);\n                        } },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'login-lang' },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'lang-text' },\n                            'Language:'\n                        ),\n                        _react2.default.createElement(_dropdown2.default, { optionDispatch: function optionDispatch(e) {\n                                return _this2.handleSelectionChange(e);\n                            }, items: item, styleClass: 'lang-drop', currentState: item[sel] })\n                    ),\n                    _react2.default.createElement('div', { className: 'login-logo alt-gor-logo' }),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'login-mid' },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'upper-box' },\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'login-head' },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, { id: 'login.butler',\n                                    defaultMessage: 'BUTLER' })\n                            ),\n                            _react2.default.createElement(\n                                'p',\n                                null,\n                                _react2.default.createElement(_reactIntl.FormattedMessage, { id: 'login.title.manageInterface',\n                                    defaultMessage: 'Management Interface'\n                                })\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: ' login-auth-error',\n                                ref: function ref(node) {\n                                    _this2.authError = node;\n                                } },\n                            _react2.default.createElement('div', { className: 'login-error' }),\n                            'Invalid username and/or password, please try again'\n                        ),\n                        _react2.default.createElement(\n                            'section',\n                            null,\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'login-field' },\n                                _react2.default.createElement('div', { className: 'login-user' }),\n                                _react2.default.createElement('input', { className: 'field', type: 'text', id: 'username', placeholder: 'Username', ref: function ref(node) {\n                                        _this2.userName = node;\n                                    } })\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: ' login-usr-error',\n                                ref: function ref(node) {\n                                    _this2.userError = node;\n                                } },\n                            'Please enter your username'\n                        ),\n                        _react2.default.createElement(\n                            'section',\n                            null,\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'login-field' },\n                                _react2.default.createElement('div', { className: 'login-password' }),\n                                _react2.default.createElement('input', { className: 'field', type: 'password', id: 'password', placeholder: 'Password', ref: function ref(node) {\n                                        _this2.password = node;\n                                    } })\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'login-usr-error', ref: function ref(node) {\n                                    _this2.passError = node;\n                                } },\n                            'Please enter your password'\n                        ),\n                        _react2.default.createElement(\n                            'section',\n                            null,\n                            _react2.default.createElement('input', { type: 'submit', className: 'login-btn', value: 'Login' }),\n                            _react2.default.createElement('br', null)\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'box-bottom-left' },\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            'Current time: 09:00:15(IST)'\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'box-bottom-right' },\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            'v 1.0'\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return Login;\n}(_react2.default.Component);\n\n;\n/**\n * [Passing Router to component through context]\n * @type {Object}\n */\nLogin.contextTypes = {\n    router: _react2.default.PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        loginAuthorized: state.authLogin.loginAuthorized,\n        auth_token: state.authLogin.auth_token,\n        userName: state.authLogin.username,\n        sLang: state.intl.locale\n    };\n}\n/**\n * @param  {[Function]}\n * @return {[Object]}\n * mapping dispatch function to props\n * so that they could be called from props\n */\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n        authLoginData: function authLoginData(params) {\n            dispatch((0, _loginAction.authLoginData)(params));\n        },\n        updateIntl: function updateIntl(params) {\n            dispatch((0, _reactIntlRedux.updateIntl)(params));\n        }\n    };\n};\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Login);\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Login/login.js\n ** module id = 466\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./src/components/Login/login.js?");

/***/ },

/***/ 467:
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar WS_URL = exports.WS_URL = \"wss://192.168.8.118/manager_api/wss\";\nvar LOGIN_URL = exports.LOGIN_URL = \"https://192.168.8.118/api/auth/token\";\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/constants/configConstants.js\n ** module id = 467\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./src/constants/configConstants.js?");

/***/ }

});