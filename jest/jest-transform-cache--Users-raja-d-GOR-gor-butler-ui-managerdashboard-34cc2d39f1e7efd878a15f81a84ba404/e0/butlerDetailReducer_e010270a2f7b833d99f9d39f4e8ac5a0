/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/reducers/butlerDetailReducer.js';exports.




































































butlerDetail = butlerDetail;var /* istanbul ignore next */_frontEndConstants = require('../constants/frontEndConstants');var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);var /* istanbul ignore next */_reactIntl = require('react-intl'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function processButlersData(data) {var butlerData = [],butlerDetail = {};let online = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'butlerDetail.online.status', description: 'online status for butlerDetail', defaultMessage: 'Online', __source: { fileName: _jsxFileName, lineNumber: 7 }, __self: this });let offline = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'butlerDetail.offline.status', description: 'offline status for butlerDetail', defaultMessage: 'Offline', __source: { fileName: _jsxFileName, lineNumber: 9 }, __self: this });var currentTask = { 0: "Pick", 1: "Put", 2: "Audit", 3: "Charging", 4: "Move" };var currentSubtask = { 0: "Moving to", 1: "Moving to mount", 2: "Moving to dismount", 3: "Docked at" };var currentState = { "online": online, "offline": offline };let BOT, PPS, CS, MSU;for (var i = data.length - 1; i >= 0; i--) {var botId = data[i].butler_id,msuId = data[i].display_msu_id,csId = data[i].charger_id,ppsId = data[i].pps_id;BOT = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'butlerDetail.name.prefix', description: 'prefix for butler id', defaultMessage: 'BOT - {botId}', values: { botId: botId }, __source: { fileName: _jsxFileName, lineNumber: 19 }, __self: this });PPS = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.name.prefix', description: 'prefix for pps id', defaultMessage: 'PPS - {ppsId}', values: { ppsId: ppsId }, __source: { fileName: _jsxFileName, lineNumber: 21 }, __self: this });CS = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'charger.name.prefix', description: 'prefix for charger id', defaultMessage: 'CS - {csId}', values: { csId: csId }, __source: { fileName: _jsxFileName, lineNumber: 23 }, __self: this });MSU = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'msu.name.prefix', description: 'prefix for msu id', defaultMessage: 'MSU - {msuId}', values: { msuId: msuId }, __source: { fileName: _jsxFileName, lineNumber: 25 }, __self: this });butlerDetail = {};butlerDetail.id = BOT;butlerDetail.statusClass = data[i].state;butlerDetail.status = currentState[data[i].state];butlerDetail.location = data[i].location;butlerDetail.voltage = data[i].voltage;butlerDetail.taskNum = currentTask[data[i].current_task];butlerDetail.taskType = data[i].current_task;if (data[i].display_msu_id === null) {butlerDetail.msu = "--";} else {butlerDetail.msu = MSU;}if (data[i].current_task !== null) {butlerDetail.current = currentTask[data[i].current_task];if (data[i].current_subtask !== null) {butlerDetail.current = butlerDetail.current + " - " + currentSubtask[data[i].current_subtask];if (data[i].charger_id !== null) {butlerDetail.current = butlerDetail.current + " CS " + data[i].charger_id;} else if (data[i].msu_id !== null) {butlerDetail.current = butlerDetail.current + " MSU " + data[i].msu_id;} else {butlerDetail.current = butlerDetail.current + " PPS " + data[i].pps_id;}}} else {butlerDetail.current = "--";}butlerData.push(butlerDetail);}return butlerData;}function butlerDetail(state = {}, action) {

    switch (action.type) {
        case /* istanbul ignore next */_frontEndConstants.BUTLERS_DATA:
            var res, butlers;
            res = action.data;
            if (!res.complete_data) {
                /**
                                      * Error handling
                                      */
                return state;
            }
            if (res.complete_data) {
                butlers = processButlersData(res.complete_data);


                return Object.assign({}, state, {
                    "butlerDetail": res.complete_data.length > 0 ? res.complete_data : state.butlerDetail,
                    "noResultFound": res.complete_data.length < 1 });

            }
            break;
        case /* istanbul ignore next */_frontEndConstants.BUTLERBOTS_REFRESHED:
            return Object.assign({}, state, {
                "butlerBotsRefreshed": new Date() });


        default:
            return state;}

}