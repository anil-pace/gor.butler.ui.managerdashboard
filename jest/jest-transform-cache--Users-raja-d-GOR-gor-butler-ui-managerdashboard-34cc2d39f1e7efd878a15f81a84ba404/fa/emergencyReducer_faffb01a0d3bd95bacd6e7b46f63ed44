/* istanbul ignore next */"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.








emergency = emergency;var /* istanbul ignore next */_frontEndConstants = require("../constants/frontEndConstants"); /**
                                                                                                                     * @param  {State Object}
                                                                                                                     * @param  {Action object}
                                                                                                                     * @return {[Object] updated state}
                                                                                                                     */function emergency(state = {}, action) {switch (action.type) {case /* istanbul ignore next */_frontEndConstants.MODAL_STATUS:return Object.assign({}, state, { "hideModal": action.data });

      break;
    case /* istanbul ignore next */_frontEndConstants.SAFETY_MAP:
      let applicable,safetyList = [],botList = [],list = [];
      applicable = action.data.applicable || false;

      if (applicable) {
        safetyList = action.data.check_list;
        botList = action.data.displaced_bots;
      } else

      {
        safetyList = action.data.check_list;
      }

      return Object.assign({}, state, {
        safetyList: safetyList,
        botList: botList });

      break;
    case /* istanbul ignore next */_frontEndConstants.SAFETY_ERROR_MAP:
      return Object.assign({}, state, {
        "safetyErrorList": action.data });

      break;
    case /* istanbul ignore next */_frontEndConstants.SAFETY_ERROR_BOT:
      return Object.assign({}, state, {
        "safetyErrorBotList": action.data });

      break;
    case /* istanbul ignore next */_frontEndConstants.CHECKLIST:
      return Object.assign({}, state, {
        "checkingList": action.data });

      break;
    case /* istanbul ignore next */_frontEndConstants.MODAL_RESET:
      return Object.assign({}, state, {
        "hideModal": null,
        "safetyErrorList": [] });

      break;

    default:
      return state;}

}