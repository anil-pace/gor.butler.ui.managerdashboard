/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/containers/systemTabs/notificationTable.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_fixedDataTable = require('fixed-data-table');
var /* istanbul ignore next */_reactDimensions = require('react-dimensions'); /* istanbul ignore next */var _reactDimensions2 = _interopRequireDefault(_reactDimensions);
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_commonFunctionsDataTable = require('../../components/commonFunctionsDataTable'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class NotificationTable extends /* istanbul ignore next */_react2.default.Component {
  constructor(props) {
    super(props);
    var temp = new Array(this.props.items.length).fill(false);
    this._dataList = new /* istanbul ignore next */_commonFunctionsDataTable.tableRenderer(this.props.items.length);
    this._defaultSortIndexes = [];
    this._dataList.newData = this.props.items;
    var size = this._dataList.getSize();
    for (var index = 0; index < size; index++) {
      this._defaultSortIndexes.push(index);
    }
    var columnWidth = this.props.containerWidth / this.props.itemNumber;
    this.state = {
      sortedDataList: this._dataList,
      colSortDirs: {},
      columnWidths: {
        component: columnWidth,
        status: columnWidth,
        description: columnWidth,
        remark: columnWidth,
        time: columnWidth } };




    this._onSortChange = this._onSortChange.bind(this);
    this._onFilterChange = this._onFilterChange.bind(this);
    this._onColumnResizeEndCallback = this._onColumnResizeEndCallback.bind(this);
  }
  _onColumnResizeEndCallback(newColumnWidth, columnKey) {
    this.setState(({ columnWidths }) => ({
      columnWidths: /* istanbul ignore next */Object.assign({},
      columnWidths, {
        [columnKey]: newColumnWidth }) }));


  }
  _onFilterChange(e) {
    if (!e.target.value) {
      this.setState({
        sortedDataList: this._dataList });

    }
    this.setState({
      sortedDataList: new /* istanbul ignore next */_commonFunctionsDataTable.DataListWrapper( /* istanbul ignore next */(0, _commonFunctionsDataTable.filterIndex)(e, this._dataList), this._dataList) });

  }

  handlChange(columnKey, rowIndex) {

  }
  _onSortChange(columnKey, sortDir) {
    var sortIndexes = this._defaultSortIndexes.slice();
    this.setState({
      sortedDataList: new /* istanbul ignore next */_commonFunctionsDataTable.DataListWrapper( /* istanbul ignore next */(0, _commonFunctionsDataTable.sortData)(columnKey, sortDir, sortIndexes, this._dataList), this._dataList),
      colSortDirs: {
        [columnKey]: sortDir } });


  }
  render() {
    var heightRes = 500;
    if (this.props.containerHeight !== 0) {
      heightRes = this.props.containerHeight;
    } /* istanbul ignore next */var _state =


    this.state,sortedDataList = _state.sortedDataList,colSortDirs = _state.colSortDirs,columnWidths = _state.columnWidths;
    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gorTableMainContainer', __source: { fileName: _jsxFileName, lineNumber: 76 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gorToolBar', __source: { fileName: _jsxFileName, lineNumber: 77 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gorToolBarWrap', __source: { fileName: _jsxFileName, lineNumber: 78 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gorToolBarElements', __source: { fileName: _jsxFileName, lineNumber: 79 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'NotificationTable.table.heading', description: 'Heading for NotificationTable',
                defaultMessage: 'Notifications', __source: { fileName: _jsxFileName, lineNumber: 80 }, __self: this }))),



          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'filterWrapper', __source: { fileName: _jsxFileName, lineNumber: 85 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gorFilter', __source: { fileName: _jsxFileName, lineNumber: 86 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'searchbox-magnifying-glass-icon', __source: { fileName: _jsxFileName, lineNumber: 87 }, __self: this }),
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ className: 'gorInputFilter',
                onChange: this._onFilterChange,
                placeholder: 'Filter by keywords', __source: { fileName: _jsxFileName, lineNumber: 88 }, __self: this })))),




        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_fixedDataTable.Table, /* istanbul ignore next */Object.assign({
            rowHeight: 66,
            rowsCount: sortedDataList.getSize(),
            headerHeight: 70,
            onColumnResizeEndCallback: this._onColumnResizeEndCallback,
            isColumnResizing: false,
            width: this.props.containerWidth,
            height: heightRes },
          this.props, { __source: { fileName: _jsxFileName, lineNumber: 95 }, __self: this }),
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_fixedDataTable.Column, /* istanbul ignore next */{
            columnKey: 'component',
            header:
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_commonFunctionsDataTable.SortHeaderCell, /* istanbul ignore next */{ onSortChange: this._onSortChange,
                sortDir: colSortDirs.component, __source: { fileName: _jsxFileName, lineNumber: 107 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gorToolHeaderEl', __source: { fileName: _jsxFileName, lineNumber: 109 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gorToolHeaderEl', __source: { fileName: _jsxFileName, lineNumber: 110 }, __self: this }, /* istanbul ignore next */' ', /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'NotificationTable.table.component', description: 'component for NotificationTable',
                    defaultMessage: 'COMPONENT', __source: { fileName: _jsxFileName, lineNumber: 110 }, __self: this }), /* istanbul ignore next */' '))),




            cell: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_commonFunctionsDataTable.TextCell, /* istanbul ignore next */{ data: sortedDataList, __source: { fileName: _jsxFileName, lineNumber: 116 }, __self: this }),
            fixed: true,
            width: columnWidths.component,
            isResizable: true, __source: { fileName: _jsxFileName, lineNumber: 104 }, __self: this }),

          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_fixedDataTable.Column, /* istanbul ignore next */{
            columnKey: 'status',
            header:
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_commonFunctionsDataTable.SortHeaderCell, /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 124 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 125 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'Notifications.table.status', description: 'Status for NotificationTable',
                  defaultMessage: 'EVENT TYPE', __source: { fileName: _jsxFileName, lineNumber: 126 }, __self: this }))),



            cell: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_commonFunctionsDataTable.StatusCell, /* istanbul ignore next */{ data: sortedDataList, __source: { fileName: _jsxFileName, lineNumber: 131 }, __self: this }),
            fixed: true,
            width: columnWidths.status,
            isResizable: true, __source: { fileName: _jsxFileName, lineNumber: 121 }, __self: this }),


          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_fixedDataTable.Column, /* istanbul ignore next */{
            columnKey: 'description',
            header:
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_commonFunctionsDataTable.SortHeaderCell, /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 140 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'NotificationTable.table.description', description: 'description for current component',
                defaultMessage: 'DESCRIPTION', __source: { fileName: _jsxFileName, lineNumber: 141 }, __self: this })),



            cell: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_commonFunctionsDataTable.TextCell, /* istanbul ignore next */{ data: sortedDataList, __source: { fileName: _jsxFileName, lineNumber: 146 }, __self: this }),
            fixed: true,
            width: columnWidths.description,
            isResizable: true, __source: { fileName: _jsxFileName, lineNumber: 137 }, __self: this }),

          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_fixedDataTable.Column, /* istanbul ignore next */{
            columnKey: 'remark',
            header:
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_commonFunctionsDataTable.SortHeaderCell, /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 154 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'NotificationTable.table.remark', description: 'remark for component',
                defaultMessage: 'REMARKS', __source: { fileName: _jsxFileName, lineNumber: 155 }, __self: this })),



            cell: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'textarea', /* istanbul ignore next */{ rows: '3', cols: '30', __source: { fileName: _jsxFileName, lineNumber: 160 }, __self: this }),
            fixed: true,
            width: columnWidths.remark,
            isResizable: true, __source: { fileName: _jsxFileName, lineNumber: 151 }, __self: this }),

          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_fixedDataTable.Column, /* istanbul ignore next */{
            columnKey: 'time',
            header:
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_commonFunctionsDataTable.SortHeaderCell, /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 168 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'NotificationTable.table.location', description: 'Starting Time for Component',
                defaultMessage: 'TIME', __source: { fileName: _jsxFileName, lineNumber: 169 }, __self: this })),


            cell: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_commonFunctionsDataTable.TextCell, /* istanbul ignore next */{ data: sortedDataList, __source: { fileName: _jsxFileName, lineNumber: 173 }, __self: this }),
            fixed: true,
            width: columnWidths.time,
            isResizable: true, __source: { fileName: _jsxFileName, lineNumber: 165 }, __self: this }))));




  }} /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactDimensions2.default)()(NotificationTable);