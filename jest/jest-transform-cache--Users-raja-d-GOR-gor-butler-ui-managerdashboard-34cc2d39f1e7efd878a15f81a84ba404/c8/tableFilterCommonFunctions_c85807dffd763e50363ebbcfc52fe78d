/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_1hulwtb6ax = function () {var path = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/tableFilter/tableFilterCommonFunctions.js',hash = '87c3b3fcbeac96017fff9e2f940601c2b43d66e3',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/tableFilter/tableFilterCommonFunctions.js', statementMap: { '0': { start: { line: 4, column: 26 }, end: { line: 4, column: 44 } }, '1': { start: { line: 5, column: 25 }, end: { line: 5, column: 49 } }, '2': { start: { line: 8, column: 8 }, end: { line: 37, column: 9 } }, '3': { start: { line: 9, column: 12 }, end: { line: 31, column: 13 } }, '4': { start: { line: 10, column: 16 }, end: { line: 10, column: 49 } }, '5': { start: { line: 12, column: 44 }, end: { line: 12, column: 89 } }, '6': { start: { line: 13, column: 16 }, end: { line: 15, column: 17 } }, '7': { start: { line: 14, column: 20 }, end: { line: 14, column: 78 } }, '8': { start: { line: 19, column: 17 }, end: { line: 31, column: 13 } }, '9': { start: { line: 20, column: 16 }, end: { line: 20, column: 40 } }, '10': { start: { line: 21, column: 16 }, end: { line: 21, column: 49 } }, '11': { start: { line: 24, column: 26 }, end: { line: 24, column: 61 } }, '12': { start: { line: 25, column: 16 }, end: { line: 27, column: 17 } }, '13': { start: { line: 26, column: 18 }, end: { line: 26, column: 121 } }, '14': { start: { line: 28, column: 16 }, end: { line: 30, column: 17 } }, '15': { start: { line: 29, column: 20 }, end: { line: 29, column: 62 } }, '16': { start: { line: 35, column: 12 }, end: { line: 35, column: 36 } }, '17': { start: { line: 36, column: 12 }, end: { line: 36, column: 45 } }, '18': { start: { line: 38, column: 8 }, end: { line: 38, column: 29 } }, '19': { start: { line: 43, column: 31 }, end: { line: 43, column: 47 } }, '20': { start: { line: 44, column: 8 }, end: { line: 44, column: 50 } }, '21': { start: { line: 45, column: 8 }, end: { line: 45, column: 34 } } }, fnMap: { '0': { name: 'handelTokenClick', decl: { start: { line: 3, column: 16 }, end: { line: 3, column: 32 } }, loc: { start: { line: 3, column: 57 }, end: { line: 39, column: 1 } }, line: 3 }, '1': { name: 'handleInputQuery', decl: { start: { line: 42, column: 16 }, end: { line: 42, column: 32 } }, loc: { start: { line: 42, column: 61 }, end: { line: 46, column: 1 } }, line: 42 } }, branchMap: { '0': { loc: { start: { line: 8, column: 8 }, end: { line: 37, column: 9 } }, type: 'if', locations: [{ start: { line: 8, column: 8 }, end: { line: 37, column: 9 } }, { start: { line: 8, column: 8 }, end: { line: 37, column: 9 } }], line: 8 }, '1': { loc: { start: { line: 9, column: 12 }, end: { line: 31, column: 13 } }, type: 'if', locations: [{ start: { line: 9, column: 12 }, end: { line: 31, column: 13 } }, { start: { line: 9, column: 12 }, end: { line: 31, column: 13 } }], line: 9 }, '2': { loc: { start: { line: 13, column: 16 }, end: { line: 15, column: 17 } }, type: 'if', locations: [{ start: { line: 13, column: 16 }, end: { line: 15, column: 17 } }, { start: { line: 13, column: 16 }, end: { line: 15, column: 17 } }], line: 13 }, '3': { loc: { start: { line: 19, column: 17 }, end: { line: 31, column: 13 } }, type: 'if', locations: [{ start: { line: 19, column: 17 }, end: { line: 31, column: 13 } }, { start: { line: 19, column: 17 }, end: { line: 31, column: 13 } }], line: 19 }, '4': { loc: { start: { line: 25, column: 16 }, end: { line: 27, column: 17 } }, type: 'if', locations: [{ start: { line: 25, column: 16 }, end: { line: 27, column: 17 } }, { start: { line: 25, column: 16 }, end: { line: 27, column: 17 } }], line: 25 }, '5': { loc: { start: { line: 26, column: 18 }, end: { line: 26, column: 120 } }, type: 'cond-expr', locations: [{ start: { line: 26, column: 57 }, end: { line: 26, column: 96 } }, { start: { line: 26, column: 97 }, end: { line: 26, column: 120 } }], line: 26 }, '6': { loc: { start: { line: 28, column: 16 }, end: { line: 30, column: 17 } }, type: 'if', locations: [{ start: { line: 28, column: 16 }, end: { line: 30, column: 17 } }, { start: { line: 28, column: 16 }, end: { line: 30, column: 17 } }], line: 28 }, '7': { loc: { start: { line: 28, column: 20 }, end: { line: 28, column: 88 } }, type: 'binary-expr', locations: [{ start: { line: 28, column: 20 }, end: { line: 28, column: 40 } }, { start: { line: 28, column: 44 }, end: { line: 28, column: 72 } }, { start: { line: 28, column: 76 }, end: { line: 28, column: 88 } }], line: 28 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0 }, f: { '0': 0, '1': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0], '6': [0, 0], '7': [0, 0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();exports.

handelTokenClick = handelTokenClick; /* istanbul ignore next */exports.






































handleInputQuery = handleInputQuery;var /* istanbul ignore next */_frontEndConstants = require('../../constants/frontEndConstants');function handelTokenClick(field, value, state, data) {/* istanbul ignore next */++cov_1hulwtb6ax.f[0];var selectedToken = /* istanbul ignore next */(++cov_1hulwtb6ax.s[0], data.tokenSelected);var defaultToken = /* istanbul ignore next */(++cov_1hulwtb6ax.s[1], data.defaultToken[field]); /* istanbul ignore next */++cov_1hulwtb6ax.s[2];if (selectedToken[field]) {/* istanbul ignore next */++cov_1hulwtb6ax.b[0][0];++cov_1hulwtb6ax.s[3];if (state === /* istanbul ignore next */_frontEndConstants.ADD_TOKEN) {/* istanbul ignore next */++cov_1hulwtb6ax.b[1][0];++cov_1hulwtb6ax.s[4]; // when user select a token adds in state and remove default selected token
            selectedToken[field].push(value);let removeDefaultFieldIndex = /* istanbul ignore next */(++cov_1hulwtb6ax.s[5], selectedToken[field].indexOf(defaultToken[0])); /* istanbul ignore next */++cov_1hulwtb6ax.s[6];if (removeDefaultFieldIndex >= 0) {/* istanbul ignore next */++cov_1hulwtb6ax.b[2][0];++cov_1hulwtb6ax.s[7];selectedToken[field].splice(removeDefaultFieldIndex, 1);} else /* istanbul ignore next */{++cov_1hulwtb6ax.b[2][1];}} else {/* istanbul ignore next */++cov_1hulwtb6ax.b[1][1];++cov_1hulwtb6ax.s[8];if (state === /* istanbul ignore next */_frontEndConstants.ADD_DEFAULT) {/* istanbul ignore next */++cov_1hulwtb6ax.b[3][0];++cov_1hulwtb6ax.s[9]; // when user add the default token
                    selectedToken[field] = []; /* istanbul ignore next */++cov_1hulwtb6ax.s[10];selectedToken[field].push(value);} else {/* istanbul ignore next */++cov_1hulwtb6ax.b[3][1];var index = /* istanbul ignore next */(++cov_1hulwtb6ax.s[11], selectedToken[field].indexOf(value)); // when user removing token
                    /* istanbul ignore next */++cov_1hulwtb6ax.s[12];if (index >= 0) {/* istanbul ignore next */++cov_1hulwtb6ax.b[4][0];++cov_1hulwtb6ax.s[13];Array.isArray(selectedToken[field]) ? /* istanbul ignore next */(++cov_1hulwtb6ax.b[5][0], selectedToken[field].splice(index, 1)) : /* istanbul ignore next */(++cov_1hulwtb6ax.b[5][1], selectedToken[field] = []);} else /* istanbul ignore next */{++cov_1hulwtb6ax.b[4][1];}++cov_1hulwtb6ax.s[14];if ( /* istanbul ignore next */(++cov_1hulwtb6ax.b[7][0], selectedToken[field]) && /* istanbul ignore next */(++cov_1hulwtb6ax.b[7][1], !selectedToken[field].length) && /* istanbul ignore next */(++cov_1hulwtb6ax.b[7][2], defaultToken)) {/* istanbul ignore next */++cov_1hulwtb6ax.b[6][0];++cov_1hulwtb6ax.s[15]; // checks when none is selected, checks default option
                        selectedToken[field].push(defaultToken[0]);} else /* istanbul ignore next */{++cov_1hulwtb6ax.b[6][1];}}}} else {/* istanbul ignore next */++cov_1hulwtb6ax.b[0][1];++cov_1hulwtb6ax.s[16];selectedToken[field] = []; /* istanbul ignore next */++cov_1hulwtb6ax.s[17];selectedToken[field].push(value);} /* istanbul ignore next */++cov_1hulwtb6ax.s[18];return selectedToken;}function handleInputQuery(inputQuery, queryField, data) {/* istanbul ignore next */++cov_1hulwtb6ax.f[1];var currentSearchState = /* istanbul ignore next */(++cov_1hulwtb6ax.s[19], data.searchQuery); /* istanbul ignore next */++cov_1hulwtb6ax.s[20];currentSearchState[queryField] = inputQuery; /* istanbul ignore next */++cov_1hulwtb6ax.s[21];return currentSearchState;}