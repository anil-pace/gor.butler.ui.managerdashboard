/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/containers/userTab/editUser.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_userActions = require('../../actions/userActions');
var /* istanbul ignore next */_validationActions = require('../../actions/validationActions');
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_frontEndConstants = require('../../constants/frontEndConstants');
var /* istanbul ignore next */_backEndConstants = require('../../constants/backEndConstants');
var /* istanbul ignore next */_configConstants = require('../../constants/configConstants');
var /* istanbul ignore next */_fielderror = require('../../components/fielderror/fielderror'); /* istanbul ignore next */var _fielderror2 = _interopRequireDefault(_fielderror);
var /* istanbul ignore next */_userRoles = require('./userRoles'); /* istanbul ignore next */var _userRoles2 = _interopRequireDefault(_userRoles);
var /* istanbul ignore next */_fieldCheck = require('../../utilities/fieldCheck'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class EditUser extends /* istanbul ignore next */_react2.default.Component {
    constructor(props) {
        super(props);
        this.state = { pwdView: false };
    }

    componentDidMount() {
        let userData = {
            'url': /* istanbul ignore next */_configConstants.ROLE_URL,
            'method': /* istanbul ignore next */_frontEndConstants.GET,
            'cause': /* istanbul ignore next */_frontEndConstants.GET_ROLES,
            'contentType': /* istanbul ignore next */_frontEndConstants.APP_JSON,
            'accept': /* istanbul ignore next */_frontEndConstants.APP_JSON,
            'token': this.props.auth_token };

        if (!this.props.roleList) {
            this.props.userRequest(userData);
        }


    }

    removeThisModal() {
        this.props.resetForm();
        this.props.removeModal();
    }

    componentWillReceiveProps(nextProps) {
        if (!nextProps.auth_token) {
            this.removeThisModal();
        }
    }

    _checkName() {
        let firstname = this.firstName.value,lastname = this.lastName.value,nameInfo;
        nameInfo = /* istanbul ignore next */(0, _fieldCheck.nameStatus)(firstname, lastname);
        this.props.validateName(nameInfo);
        return nameInfo.type;
    }

    _handleAnchorClick() {
        this.setState({ pwdView: true });
    }

    _checkPwd() {
        let pswd = this.pswd.value,confirmPswd = this.confirmPswd.value,givenRole,passwordInfo,roleSelected;
        givenRole = this.props.roleName;
        roleSelected = this.props.roleSet ? this.props.roleSet : givenRole;
        if (roleSelected !== givenRole) {
            this.setState({ pwdView: true });
        }
        passwordInfo = /* istanbul ignore next */(0, _fieldCheck.passwordStatus)(pswd, confirmPswd, roleSelected);
        this.props.validatePassword(passwordInfo);
        return passwordInfo.type;
    }

    _getId(role) {
        let roles = this.props.roleList,len;
        len = roles.length;
        for (let i = 0; i < len; i++) {
            if (roles[i].name === role) {
                return roles[i].id;
            }
        }
        return null;
    }

    _handleEditUser(e) {
        e.preventDefault();
        let pswd, confirmPswd, role, firstname, lastname, givenRole;

        firstname = this.firstName.value;
        lastname = this.lastName.value;
        pswd = this.pswd.value;
        confirmPswd = this.confirmPswd.value;

        if (!this.props.nameCheck.type) {
            if (!this._checkName())
            return;
        }
        givenRole = this._getId(this.props.roleName);

        role = this.props.roleSet ? this._getId(this.props.roleSet) : givenRole;

        if (!pswd && !confirmPswd && (role === givenRole || this.props.roleSet !== /* istanbul ignore next */_backEndConstants.BUTLER_SUPERVISOR)) {
            pswd = "__unchanged__";
            confirmPswd = "__unchanged__";
        } else
        if (!this._checkPwd()) {
            return;
        }
        let formdata = {
            "first_name": firstname,
            "last_name": lastname,
            "role_id": role,
            "password": pswd,
            "password_confirm": confirmPswd };


        let editurl = /* istanbul ignore next */_configConstants.HEADER_URL + '/' + this.props.id;
        let userData = {
            'url': editurl,
            'formdata': formdata,
            'method': /* istanbul ignore next */_frontEndConstants.PUT,
            'cause': /* istanbul ignore next */_frontEndConstants.EDIT_USER,
            'contentType': /* istanbul ignore next */_frontEndConstants.APP_JSON,
            'accept': /* istanbul ignore next */_frontEndConstants.APP_JSON,
            'token': this.props.auth_token };

        this.props.userRequest(userData);
        this.removeThisModal();
    }

    render() {
        let tick = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-tick', __source: { fileName: _jsxFileName, lineNumber: 127 }, __self: this });
        return (
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 129 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-modal-content', __source: { fileName: _jsxFileName, lineNumber: 130 }, __self: this },
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-modal-head', __source: { fileName: _jsxFileName, lineNumber: 131 }, __self: this },
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-add', __source: { fileName: _jsxFileName, lineNumber: 132 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'users.edit.heading',
                                description: 'Heading for Edit user',
                                defaultMessage: 'Edit user', __source: { fileName: _jsxFileName, lineNumber: 132 }, __self: this }),
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-sub-head', __source: { fileName: _jsxFileName, lineNumber: 135 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'users.edit.subheading',
                                    description: 'Subheading for Edit user',
                                    defaultMessage: 'All the fields are mandatory', __source: { fileName: _jsxFileName, lineNumber: 135 }, __self: this }))),


                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'close', onClick: this.removeThisModal.bind(this), __source: { fileName: _jsxFileName, lineNumber: 140 }, __self: this }, /* istanbul ignore next */'\xD7')),

                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-modal-body', __source: { fileName: _jsxFileName, lineNumber: 142 }, __self: this },
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'form', /* istanbul ignore next */{ action: '#', id: 'editUserForm', ref: node => {
                                    this.editUserForm = node;
                                },
                                onSubmit: e => this._handleEditUser(e), __source: { fileName: _jsxFileName, lineNumber: 143 }, __self: this },

                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-form', __source: { fileName: _jsxFileName, lineNumber: 148 }, __self: this },
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-details', __source: { fileName: _jsxFileName, lineNumber: 149 }, __self: this },
                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdlg', __source: { fileName: _jsxFileName, lineNumber: 150 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'users.edit.userdetails.heading',
                                            description: 'Text for user details heading',
                                            defaultMessage: 'Enter User details', __source: { fileName: _jsxFileName, lineNumber: 150 }, __self: this })),

                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-sub-head', __source: { fileName: _jsxFileName, lineNumber: 154 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
                                            id: 'users.edit.userdetails.subheading',
                                            description: 'Text for user details subheading',
                                            defaultMessage: 'A User ID will be required to log into the system', __source: { fileName: _jsxFileName, lineNumber: 154 }, __self: this })),

                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdsm', __source: { fileName: _jsxFileName, lineNumber: 159 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'users.edit.userdetails.userid',
                                            description: 'Text for user id',
                                            defaultMessage: 'User ID', __source: { fileName: _jsxFileName, lineNumber: 159 }, __self: this })),
                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ className: 'gor-usr-fdlg', type: 'text', placeholder: this.props.userName,
                                        id: 'userid', ref: node => {
                                            this.userId = node;
                                        }, disabled: /* istanbul ignore next */true, __source: { fileName: _jsxFileName, lineNumber: 162 }, __self: this }),
                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 166 }, __self: this }),
                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-field', __source: { fileName: _jsxFileName, lineNumber: 167 }, __self: this },
                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdsm', __source: { fileName: _jsxFileName, lineNumber: 168 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
                                                id: 'users.edit.userdetails.firstname', description: 'Text for first name',
                                                defaultMessage: 'First Name', __source: { fileName: _jsxFileName, lineNumber: 168 }, __self: this })),
                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{
                                            className: "gor-usr-fdsm" + (this.props.nameCheck.type === /* istanbul ignore next */_frontEndConstants.ERROR ? ' gor-input-error' : ' gor-input-ok'),
                                            onBlur: this.props.nameCheck.type === /* istanbul ignore next */_frontEndConstants.ERROR || this.props.nameCheck.type === /* istanbul ignore next */_frontEndConstants.SUCCESS ? this._checkName.bind(this) : '',
                                            type: 'text', defaultValue: this.props.first, id: 'firstname', ref: node => {
                                                this.firstName = node;
                                            }, __source: { fileName: _jsxFileName, lineNumber: 171 }, __self: this })),

                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-field', __source: { fileName: _jsxFileName, lineNumber: 178 }, __self: this },
                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdsm', __source: { fileName: _jsxFileName, lineNumber: 179 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
                                                id: 'users.edit.userdetails.lastname', description: 'Text for last name',
                                                defaultMessage: 'Last Name', __source: { fileName: _jsxFileName, lineNumber: 179 }, __self: this })),
                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{
                                            className: "gor-usr-fdsm" + (this.props.nameCheck.type === /* istanbul ignore next */_frontEndConstants.ERROR ? ' gor-input-error' : ' gor-input-ok'),
                                            onBlur: this._checkName.bind(this), type: 'text',
                                            defaultValue: this.props.last, id: 'lastname', ref: node => {
                                                this.lastName = node;
                                            }, __source: { fileName: _jsxFileName, lineNumber: 182 }, __self: this })),

                                    this.props.nameCheck.type ? tick : this.props.nameCheck.type === /* istanbul ignore next */_frontEndConstants.ERROR ?
                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_fielderror2.default, /* istanbul ignore next */{ txt: this.props.nameCheck.msg, __source: { fileName: _jsxFileName, lineNumber: 190 }, __self: this }) : ''),



                                this.props.roleList.length ?
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_userRoles2.default, /* istanbul ignore next */{ roleList: this.props.roleList, roleName: this.props.roleName, __source: { fileName: _jsxFileName, lineNumber: 195 }, __self: this }) : '',

                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-details', __source: { fileName: _jsxFileName, lineNumber: 197 }, __self: this },

                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: this.state.pwdView ? { display: 'block' } : { display: 'none' }, __source: { fileName: _jsxFileName, lineNumber: 199 }, __self: this },
                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdlg', __source: { fileName: _jsxFileName, lineNumber: 200 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
                                                id: 'users.edit.changepassword.heading',
                                                description: 'Heading for Change password',
                                                defaultMessage: 'Change password', __source: { fileName: _jsxFileName, lineNumber: 200 }, __self: this })),
                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-sub-head', __source: { fileName: _jsxFileName, lineNumber: 204 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
                                                id: 'users.edit.changepassword.subheading',
                                                description: 'Subheading for create password',
                                                defaultMessage: 'New password will be effective when user log-in next time', __source: { fileName: _jsxFileName, lineNumber: 204 }, __self: this })),


                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdsm', __source: { fileName: _jsxFileName, lineNumber: 210 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'users.edit.password.field1',
                                                description: 'Text for password',
                                                defaultMessage: 'Password', __source: { fileName: _jsxFileName, lineNumber: 210 }, __self: this })),

                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{
                                            className: "gor-usr-fdlg" + (this.props.passwordCheck.type === /* istanbul ignore next */_frontEndConstants.ERROR ? ' gor-input-error' : ' gor-input-ok'),
                                            type: 'password', id: 'pswd',
                                            onBlur: this.props.passwordCheck.type === /* istanbul ignore next */_frontEndConstants.ERROR || this.props.passwordCheck.type === /* istanbul ignore next */_frontEndConstants.SUCCESS ? this._checkPwd.bind(this) : '',
                                            ref: node => {
                                                this.pswd = node;
                                            }, __source: { fileName: _jsxFileName, lineNumber: 214 }, __self: this }),
                                        this.props.passwordCheck.type ? tick : '',

                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdsm', __source: { fileName: _jsxFileName, lineNumber: 223 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'users.edit.password.field2',
                                                description: 'Text for confirm password',
                                                defaultMessage: 'Confirm Password', __source: { fileName: _jsxFileName, lineNumber: 223 }, __self: this })),

                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{
                                            className: "gor-usr-fdlg" + (this.props.passwordCheck.type === /* istanbul ignore next */_frontEndConstants.ERROR ? ' gor-input-error' : ' gor-input-ok'),
                                            type: 'password', id: 'confirmPswd', onChange: this._checkPwd.bind(this),
                                            ref: node => {
                                                this.confirmPswd = node;
                                            }, __source: { fileName: _jsxFileName, lineNumber: 227 }, __self: this }),
                                        this.props.passwordCheck.type ? tick : this.props.passwordCheck.type === /* istanbul ignore next */_frontEndConstants.ERROR ?
                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_fielderror2.default, /* istanbul ignore next */{ txt: this.props.passwordCheck.msg, __source: { fileName: _jsxFileName, lineNumber: 234 }, __self: this }) : ''),


                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: this.state.pwdView ? { display: 'none' } : { display: 'block' }, __source: { fileName: _jsxFileName, lineNumber: 237 }, __self: this },
                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdlg', __source: { fileName: _jsxFileName, lineNumber: 238 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'users.edit.password.',
                                                description: 'Heading for Password',
                                                defaultMessage: 'New Password', __source: { fileName: _jsxFileName, lineNumber: 238 }, __self: this })),


                                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'a', /* istanbul ignore next */{ href: 'javascript:void(0)',
                                                onClick: e => this._handleAnchorClick(e), __source: { fileName: _jsxFileName, lineNumber: 243 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
                                                id: 'users.edit.password.query', description: 'Text for change password',
                                                defaultMessage: 'Change Password', __source: { fileName: _jsxFileName, lineNumber: 244 }, __self: this })))),



                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ className: 'gor-submit', __source: { fileName: _jsxFileName, lineNumber: 250 }, __self: this },
                                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ type: 'submit', className: 'gor-add-btn', __source: { fileName: _jsxFileName, lineNumber: 251 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
                                            id: 'users.edit.password.button', description: 'Text for edit user button',
                                            defaultMessage: 'Save', __source: { fileName: _jsxFileName, lineNumber: 251 }, __self: this })))))))));







    }}

function mapStateToProps(state, ownProps) {
    return {
        nameCheck: state.appInfo.nameInfo || {},
        passwordCheck: state.appInfo.passwordInfo || {},
        roleList: state.appInfo.roleList || [],
        roleSet: state.appInfo.roleSet || null,
        auth_token: state.authLogin.auth_token };

}

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        userRequest: function /* istanbul ignore next */userRequest(data) {
            dispatch( /* istanbul ignore next */(0, _userActions.userRequest)(data));
        },
        validateName: function /* istanbul ignore next */validateName(data) {
            dispatch( /* istanbul ignore next */(0, _validationActions.validateName)(data));
        },
        validatePassword: function /* istanbul ignore next */validatePassword(data) {
            dispatch( /* istanbul ignore next */(0, _validationActions.validatePassword)(data));
        },
        resetForm: function /* istanbul ignore next */resetForm() {
            dispatch( /* istanbul ignore next */(0, _validationActions.resetForm)());
        } };

}; /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(EditUser);