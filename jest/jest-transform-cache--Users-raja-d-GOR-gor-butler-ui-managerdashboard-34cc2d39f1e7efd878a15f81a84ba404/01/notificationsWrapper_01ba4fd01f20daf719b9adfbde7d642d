/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/containers/notifications/notificationsWrapper.js'; /**
                                                                                                                                                                                                                                  * Container for Notifications
                                                                                                                                                                                                                                  * 
                                                                                                                                                                                                                                  */
var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_notifications = require('../../components/notifications/notifications'); /* istanbul ignore next */var _notifications2 = _interopRequireDefault(_notifications);
var /* istanbul ignore next */_reactReduxModal = require('react-redux-modal');
var /* istanbul ignore next */_viewAllNotificationWrapper = require('./viewAllNotificationWrapper'); /* istanbul ignore next */var _viewAllNotificationWrapper2 = _interopRequireDefault(_viewAllNotificationWrapper);
var /* istanbul ignore next */_configConstants = require('../../constants/configConstants');
var /* istanbul ignore next */_frontEndConstants = require('../../constants/frontEndConstants');
var /* istanbul ignore next */_notificationAction = require('../../actions/notificationAction');
var /* istanbul ignore next */_notificationSocketActions = require('../../actions/notificationSocketActions'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}



class NotificationsWrapper extends /* istanbul ignore next */_react2.default.Component {

    constructor(props) {
        super(props);

        this.state = {
            page: 0,
            size: 15,
            sort: "createTime",
            order: "DESC",
            value: "",
            subscriptionSent: false };


    }
    _viewAllLinkClick() {

        /* istanbul ignore next */_reactReduxModal.modal.add( /* istanbul ignore next */_viewAllNotificationWrapper2.default, {
            title: '',
            size: 'large',
            closeOnOutsideClick: true,
            hideCloseButton: true });

    }
    _onPaneSearch(value) {
        this.setState({
            value,
            page: value ? this.state.page : 0 },
        function () {
            if (this.state.value) {
                let params = {
                    'url': /* istanbul ignore next */_configConstants.NOTIFICATIONS_URL + "?page=" + this.state.page + "&size=" + this.state.size +
                    "&searchTerm=" + this.state.value + "&sort=" + this.state.sort + "&order=" + this.state.order,
                    'method': /* istanbul ignore next */_frontEndConstants.GET,
                    'cause': /* istanbul ignore next */_frontEndConstants.SEARCHED_NOTIFICATIONS_DATA,
                    'contentType': /* istanbul ignore next */_frontEndConstants.APP_JSON,
                    'accept': /* istanbul ignore next */_frontEndConstants.APP_JSON,
                    'withCredentials': true };

                this.props.getNotificationData(params);
            } else
            {
                this.props.resetNotificationData();
            }

        });

    }
    _onScrollHandler(event) {
        if (this.props.searchApplied && event.target.scrollHeight - event.target.scrollTop === event.target.clientHeight) {
            let page = this.props.searchDataFound === false ? this.state.page : this.state.page + 1;
            this.setState({
                page },
            function () {
                this._onPaneSearch(this.state.value);
            });


        }

    }
    _onNotificationCountClick() {

        let params = {
            'url': /* istanbul ignore next */_configConstants.READ_MSG_URL,
            'method': /* istanbul ignore next */_frontEndConstants.POST,
            'cause': "SEND_READ_INTIMATION",
            'contentType': /* istanbul ignore next */_frontEndConstants.APP_JSON,
            'accept': /* istanbul ignore next */_frontEndConstants.APP_JSON,
            'formdata': JSON.parse(JSON.stringify(this.props.readNotificationList)) };

        this.props.getNotificationData(params);

    }
    componentDidMount() {
        this.props.wsNotificationInit();
    }

    componentWillReceiveProps(nextProps) {
        if (nextProps.notificationSocketConnected && !this.state.subscriptionSent) {
            this.setState({
                subscriptionSent: true },
            function () {
                this.props.wsNotificationSubscribe( /* istanbul ignore next */_configConstants.WS_NOTIFICATION_SUBSCRIPTION);
            });

        }
    }

    render() {
        var notificationData = this.props.searchApplied ? this.props.searchedNotificationData : this.props.wsNotificationData;
        return (
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'notificationWrap', __source: { fileName: _jsxFileName, lineNumber: 109 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_notifications2.default, /* istanbul ignore next */{ onScrollHandler: this._onScrollHandler.bind(this),
                    unreadCount: this.props.unreadCount,
                    onNotificationCountClick: this._onNotificationCountClick.bind(this),
                    notificationData: notificationData,
                    onPaneSearch: this._onPaneSearch.bind(this),
                    handleViewAllLink: this._viewAllLinkClick.bind(this),
                    searchApplied: this.props.searchApplied, __source: { fileName: _jsxFileName, lineNumber: 110 }, __self: this })));





    }}


function mapStateToProps(state, ownProps) {
    return {
        "searchedNotificationData": state.notificationReducer.searchedNotificationData || [],
        "searchApplied": state.notificationReducer.searchApplied,
        "notificationSocketConnected": state.notificationSocketReducer.notificationSocketConnected,
        "wsNotificationData": state.notificationReducer.wsNotificationData || [],
        "unreadCount": state.notificationReducer.unreadCount,
        "readNotificationList": state.notificationReducer.readNotificationList,
        "isLoading": state.notificationReducer.isLoading,
        "searchDataFound": state.notificationReducer.searchDataFound };

}
function mapDispatchToProps(dispatch) {
    return {
        getNotificationData: function /* istanbul ignore next */getNotificationData(params) {dispatch( /* istanbul ignore next */(0, _notificationAction.getNotificationData)(params));},
        wsNotificationInit: function /* istanbul ignore next */wsNotificationInit() {dispatch( /* istanbul ignore next */(0, _notificationSocketActions.wsNotificationInit)());},
        resetNotificationData: function /* istanbul ignore next */resetNotificationData() {dispatch( /* istanbul ignore next */(0, _notificationAction.resetNotificationData)());},
        wsNotificationSubscribe: function /* istanbul ignore next */wsNotificationSubscribe(data) {dispatch( /* istanbul ignore next */(0, _notificationSocketActions.wsNotificationSubscribe)(data));} };

} /* istanbul ignore next */exports.default =


/* istanbul ignore next */(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(NotificationsWrapper);