/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.translationMessages = exports.formatTranslationMessages = undefined;





var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_en = require('react-intl/locale-data/en'); /* istanbul ignore next */var _en2 = _interopRequireDefault(_en);
var /* istanbul ignore next */_ja = require('react-intl/locale-data/ja'); /* istanbul ignore next */var _ja2 = _interopRequireDefault(_ja);
var /* istanbul ignore next */_zh = require('react-intl/locale-data/zh'); /* istanbul ignore next */var _zh2 = _interopRequireDefault(_zh);
var /* istanbul ignore next */_de = require('react-intl/locale-data/de'); /* istanbul ignore next */var _de2 = _interopRequireDefault(_de);
var /* istanbul ignore next */_fr = require('react-intl/locale-data/fr'); /* istanbul ignore next */var _fr2 = _interopRequireDefault(_fr);
var /* istanbul ignore next */_es = require('react-intl/locale-data/es'); /* istanbul ignore next */var _es2 = _interopRequireDefault(_es);

var /* istanbul ignore next */_enUS = require('../translations/en-US.json'); /* istanbul ignore next */var _enUS2 = _interopRequireDefault(_enUS);
var /* istanbul ignore next */_jaJP = require('../translations/ja-JP.json'); /* istanbul ignore next */var _jaJP2 = _interopRequireDefault(_jaJP);
var /* istanbul ignore next */_deDE = require('../translations/de-DE.json'); /* istanbul ignore next */var _deDE2 = _interopRequireDefault(_deDE);
var /* istanbul ignore next */_frFR = require('../translations/fr-FR.json'); /* istanbul ignore next */var _frFR2 = _interopRequireDefault(_frFR);
var /* istanbul ignore next */_esES = require('../translations/es-ES.json'); /* istanbul ignore next */var _esES2 = _interopRequireDefault(_esES);
var /* istanbul ignore next */_zhZH = require('../translations/zh-ZH.json'); /* istanbul ignore next */var _zhZH2 = _interopRequireDefault(_zhZH);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} //spanish
//german
//japanes
/* istanbul ignore next */(0, _reactIntl.addLocaleData)([... /* istanbul ignore next */_en2.default, ... /* istanbul ignore next */_ja2.default,
... /* istanbul ignore next */_zh2.default,
... /* istanbul ignore next */_de2.default,
... /* istanbul ignore next */_fr2.default,
... /* istanbul ignore next */_es2.default,
... /* istanbul ignore next */_enUS2.default,
... /* istanbul ignore next */_jaJP2.default,
... /* istanbul ignore next */_deDE2.default,
... /* istanbul ignore next */_frFR2.default,
... /* istanbul ignore next */_esES2.default,
... /* istanbul ignore next */_zhZH2.default]); //french
//chinese
//english
/**
 * i18n.js
 *
 * This will setup the i18n language files and locale data for your app.
 *
 */const formatTranslationMessages = /* istanbul ignore next */exports.formatTranslationMessages = messages => {const formattedMessages = {}; /* istanbul ignore next */var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {for ( /* istanbul ignore next */var _iterator = messages[Symbol.iterator](), _step; /* istanbul ignore next */!(_iteratorNormalCompletion = (_step = _iterator.next()).done); /* istanbul ignore next */_iteratorNormalCompletion = true) {/* istanbul ignore next */const message = _step.value;formattedMessages[message.id] = message.message || message.defaultMessage;}} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}
  return formattedMessages;
};

const translationMessages = /* istanbul ignore next */exports.translationMessages = {
  en: formatTranslationMessages( /* istanbul ignore next */_enUS2.default),
  ja: formatTranslationMessages( /* istanbul ignore next */_jaJP2.default),
  de: formatTranslationMessages( /* istanbul ignore next */_deDE2.default),
  fr: formatTranslationMessages( /* istanbul ignore next */_frFR2.default),
  es: formatTranslationMessages( /* istanbul ignore next */_esES2.default),
  zh: formatTranslationMessages( /* istanbul ignore next */_zhZH2.default) };