/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.






showTableFilter = showTableFilter; /* istanbul ignore next */exports.






BotFilterToggle = BotFilterToggle; /* istanbul ignore next */exports.






PPSFilterToggle = PPSFilterToggle; /* istanbul ignore next */exports.






CSFilterToggle = CSFilterToggle; /* istanbul ignore next */exports.






wavesFilterToggle = wavesFilterToggle; /* istanbul ignore next */exports.






ordersFilterToggle = ordersFilterToggle; /* istanbul ignore next */exports.






auditFilterToggle = auditFilterToggle; /* istanbul ignore next */exports.






userFilterToggle = userFilterToggle; /* istanbul ignore next */exports.







filterApplied = filterApplied; /* istanbul ignore next */exports.





setDefaultRange = setDefaultRange; /* istanbul ignore next */exports.








toggleBotButton = toggleBotButton; /* istanbul ignore next */exports.







togglePPSFilter = togglePPSFilter; /* istanbul ignore next */exports.






toggleAuditFilter = toggleAuditFilter; /* istanbul ignore next */exports.






toggleOrderFilter = toggleOrderFilter; /* istanbul ignore next */exports.







toggleWaveFilter = toggleWaveFilter; /* istanbul ignore next */exports.







toggleUserFilter = toggleUserFilter; /* istanbul ignore next */exports.







toggleChargingFilter = toggleChargingFilter; /* istanbul ignore next */exports.







butlerfilterState = butlerfilterState; /* istanbul ignore next */exports.






auditfilterState = auditfilterState; /* istanbul ignore next */exports.






orderfilterState = orderfilterState; /* istanbul ignore next */exports.







chargingstationfilterState = chargingstationfilterState; /* istanbul ignore next */exports.







ppsfilterState = ppsfilterState; /* istanbul ignore next */exports.








wavefilterState = wavefilterState; /* istanbul ignore next */exports.








userfilterState = userfilterState; /* istanbul ignore next */exports.








setFilterApplyFlag = setFilterApplyFlag;var /* istanbul ignore next */_frontEndConstants = require('../constants/frontEndConstants'); //This action is use to update the filter state
function showTableFilter(data) {return { type: /* istanbul ignore next */_frontEndConstants.SHOW_FILTER, data };} //Based on this action we show hide the filter for in ButlerBot tab
function BotFilterToggle(data) {return { type: /* istanbul ignore next */_frontEndConstants.BOT_TOGGLE_FILTER, data };} //Based on this action we show hide the filter for in PPS tab
function PPSFilterToggle(data) {return { type: /* istanbul ignore next */_frontEndConstants.PPS_TOGGLE_FILTER, data };} //Based on this action we show hide the filter for in ChargingStation tab
function CSFilterToggle(data) {return { type: /* istanbul ignore next */_frontEndConstants.CS_TOGGLE_FILTER, data };} //Based on this action we show hide the filter for in Waves tab
function wavesFilterToggle(data) {return { type: /* istanbul ignore next */_frontEndConstants.WAVES_TOGGLE_FILTER, data };} //Based on this action we show hide the filter for in Order tab
function ordersFilterToggle(data) {return { type: /* istanbul ignore next */_frontEndConstants.ORDERS_TOGGLE_FILTER, data };} //Based on this action we show hide the filter for in audit tab
function auditFilterToggle(data) {return { type: /* istanbul ignore next */_frontEndConstants.AUDIT_TOGGLE_FILTER, data };} //Based on this action we show hide the filter for in User tab
function userFilterToggle(data) {return { type: /* istanbul ignore next */_frontEndConstants.USER_TOGGLE_FILTER, data };} //This action is to update the props value so that componentWillReceiveProps in app.js can catch the changes
function filterApplied(data) {return { type: /* istanbul ignore next */_frontEndConstants.IS_FILTER_APPLIED, data };}function setDefaultRange(data) {return { type: 'SET_DEFAULT_RANGE', data };} //This action is use to keep the updated flag value so that we can get to know the filter is applied for butletBot tab.
function toggleBotButton(data) {return { type: /* istanbul ignore next */_frontEndConstants.TOGGLE_BUTTON_BOT, data };} //This action is use to keep the updated flag value so that we can get to know the filter is applied for PPS tab
function togglePPSFilter(data) {return { type: /* istanbul ignore next */_frontEndConstants.PPS_FILTER_VALUE, data };} //This action is use to keep the updated flag value so that we can get to know the filter is applied for Audit tab
function toggleAuditFilter(data) {return { type: /* istanbul ignore next */_frontEndConstants.AUDIT_FILTER_VALUE, data };} //This action is use to keep the updated flag value so that we can get to know the filter is applied for Order tab
function toggleOrderFilter(data) {return { type: /* istanbul ignore next */_frontEndConstants.ORDER_FILTER_VALUE, data };} //This action is use to keep the updated flag value so that we can get to know the filter is applied for Wave tab
function toggleWaveFilter(data) {return { type: /* istanbul ignore next */_frontEndConstants.WAVE_FILTER_VALUE, data };} //This action is use to keep the updated flag value so that we can get to know the filter is applied for User tab
function toggleUserFilter(data) {return { type: /* istanbul ignore next */_frontEndConstants.USER_FILTER_VALUE, data };} //This action is use to keep the updated flag value so that we can get to know the filter is applied for Charging tab
function toggleChargingFilter(data) {return { type: /* istanbul ignore next */_frontEndConstants.CHARGING_FILTER_VALUE, data };} //This action is use to keep the current filter state for Butler tab
function butlerfilterState(data) {return { type: /* istanbul ignore next */_frontEndConstants.BUTLER_FILTER_STATE, data };} //This action is use to keep the current filter state for Audit tab
function auditfilterState(data) {return { type: /* istanbul ignore next */_frontEndConstants.AUDIT_FILTER_STATE, data };} //This action is use to keep the current filter state for Order tab
function orderfilterState(data) {return { type: /* istanbul ignore next */_frontEndConstants.ORDER_FILTER_STATE, data };} //This action is use to keep the current filter state for ChargingStation tab
function chargingstationfilterState(data) {return { type: /* istanbul ignore next */_frontEndConstants.CHARGINGSTATION_FILTER_STATE, data };} //This action is use to keep the current filter state for PPS tab
function ppsfilterState(data) {return { type: /* istanbul ignore next */_frontEndConstants.PPS_FILTER_STATE, data };} //This action is use to keep the current filter state for Wave tab
function wavefilterState(data) {return { type: /* istanbul ignore next */_frontEndConstants.WAVE_FILTER_STATE, data };} //This action is use to keep the current filter state for User tab
function userfilterState(data) {return { type: /* istanbul ignore next */_frontEndConstants.USER_FILTER_STATE, data };} //This action is use to set the bool value so that we can show/hide the filter after clicking on apply button (if data available)
function setFilterApplyFlag(data) {return { type: /* istanbul ignore next */_frontEndConstants.FILTER_APPLY_FLAG, data };}