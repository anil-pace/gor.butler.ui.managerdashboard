/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/containers/auditTab/duplicateAudit.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_userActions = require('../../actions/userActions');
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_frontEndConstants = require('../../constants/frontEndConstants');
var /* istanbul ignore next */_configConstants = require('../../constants/configConstants'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class DuplicateAudit extends /* istanbul ignore next */_react2.default.Component {

  _removeThisModal() {
    this.props.removeModal();
  }
  componentWillReceiveProps(nextProps) {
    if (!nextProps.auth_token)
    {
      this._removeThisModal();
    }
  }
  _userDup() {
    let formdata = {};
    if (this.props.auditType === "pdfa") {
      formdata.audit_param_type = this.props.auditType;
      formdata.audit_param_value = {};
      formdata.audit_param_value.product_sku = this.props.auditTypeParam;
      formdata.audit_param_value.pdfa_values = this.props.auditPdfaValue;
    } else
    {
      formdata = {
        audit_param_type: this.props.auditType,
        audit_param_value: this.props.auditTypeParam };

    }
    let userData = {
      'url': /* istanbul ignore next */_configConstants.AUDIT_URL,
      'formdata': formdata,
      'method': /* istanbul ignore next */_frontEndConstants.POST,
      'cause': /* istanbul ignore next */_frontEndConstants.CREATE_AUDIT,
      'contentType': /* istanbul ignore next */_frontEndConstants.APP_JSON,
      'accept': /* istanbul ignore next */_frontEndConstants.APP_JSON,
      'token': this.props.auth_token };

    this.props.userRequest(userData);
    this._removeThisModal();
  }
  render()
  {
    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 48 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-delete gor-modal-content', __source: { fileName: _jsxFileName, lineNumber: 49 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-delete-text', __source: { fileName: _jsxFileName, lineNumber: 50 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-question gor-align-top', __source: { fileName: _jsxFileName, lineNumber: 51 }, __self: this }),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-delete-line', __source: { fileName: _jsxFileName, lineNumber: 52 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-delete-query', __source: { fileName: _jsxFileName, lineNumber: 53 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.duplicate.heading', description: 'Text for audit duplicate heading',
                  defaultMessage: 'Are you sure you would like to duplicate audit task {task_name} ?', values: { task_name: this.props.auditComplete ? this.props.auditComplete : '' }, __source: { fileName: _jsxFileName, lineNumber: 53 }, __self: this })))),


          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-delete-bottom', __source: { fileName: _jsxFileName, lineNumber: 57 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ className: 'gor-cancel-btn', onClick: this._removeThisModal.bind(this), __source: { fileName: _jsxFileName, lineNumber: 58 }, __self: this }, /* istanbul ignore next */'Close'),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ className: 'gor-delete-btn', onClick: this._userDup.bind(this), __source: { fileName: _jsxFileName, lineNumber: 59 }, __self: this }, /* istanbul ignore next */'Duplicate audit task')))));




  }}
;
function mapStateToProps(state, ownProps) {
  return {
    auth_token: state.authLogin.auth_token };

}
function mapDispatchToProps(dispatch) {
  return {
    userRequest: function /* istanbul ignore next */userRequest(data) {dispatch( /* istanbul ignore next */(0, _userActions.userRequest)(data));} };

}; /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(DuplicateAudit);