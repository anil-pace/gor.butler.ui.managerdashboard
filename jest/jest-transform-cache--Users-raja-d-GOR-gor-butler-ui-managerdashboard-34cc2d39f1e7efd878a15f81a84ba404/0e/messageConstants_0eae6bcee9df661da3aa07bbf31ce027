/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.ENTITY_BREACHED = exports.ZONE_SUB_STATUS_INTL_MESSAGE = exports.REQUEST_REPORT_FAILURE = exports.REQUEST_REPORT_SUCCESS = exports.CONTROLLER_SENSOR_TRIGGERED_MESSAGES = exports.CONTROLLER_ACTION_TRIGGERED_MESSAGES = exports.ZONE_STATUS_INTL_MESSAGE = exports.ppsStatusSuccess = exports.ppsModeSuccess = exports.ppsStatusFailure = exports.ppsModeFailure = exports.allModeSuccess = exports.allStatusSuccess = exports.g024 = exports.g023 = exports.g021 = exports.g020 = exports.fileUploadMessages = exports.ES = exports.E135 = exports.E052 = exports.E051 = exports.OP_PWD = exports.MG_PWD = exports.HISTOGRAM_NO_DATA_TEXT = exports.ERR_502 = exports.ERR_500 = exports.ERR_409 = exports.ERR_408 = exports.ERR_405 = exports.ERR_403 = exports.ERR_401 = exports.ERR_400 = exports.ERR_CONNECT = exports.ERR_API = exports.ERR_AUDIT = exports.ERR_RES = exports.ERR_USR = exports.AE008 = exports.AE007 = exports.AS003 = exports.AS00A = exports.AS001 = exports.AE006 = exports.AE005 = exports.AE004 = exports.AE002 = exports.AE001 = exports.G016 = exports.E027 = exports.E026 = exports.INVALID_LOCID = exports.INVALID_SKUID = exports.PPS = exports.CS = exports.MSU = exports.MATCH_PWD = exports.INVALID_PWD_MG = exports.INVALID_PWD_OP = exports.INVALID_NAME = exports.EMPTY_NAME = exports.EMPTY_PWD = exports.INVALID_FORMAT = exports.INVALID_ID = exports.TYPE_SUCCESS = exports.UE006 = exports.UE005 = exports.UE004 = exports.UE003 = exports.UE002 = exports.E029 = exports.E028 = exports.MODE_REQUESTED = exports.US004 = exports.UNAUTH = exports.NO_NET = exports.WRONG_CRED = exports.AUTO_LOGOUT = exports.FRENCH = exports.GERMAN = exports.CHINESE = exports.SPANISH = exports.JAP = exports.ENG = undefined;var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/constants/messageConstants.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactIntl = require('react-intl'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

//Login page
const ENG = /* istanbul ignore next */exports.ENG = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.lang.english', defaultMessage: 'English (United States)', description: 'English option in the language drop down', __source: { fileName: _jsxFileName, lineNumber: 5 }, __self: undefined });
const JAP = /* istanbul ignore next */exports.JAP = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.lang.japanese', defaultMessage: '\u65E5\u672C\u8A9E', description: 'Japanese option in the language drop down', __source: { fileName: _jsxFileName, lineNumber: 6 }, __self: undefined });
const SPANISH = /* istanbul ignore next */exports.SPANISH = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.lang.spanish', defaultMessage: 'Espa\xF1ol', description: 'SPANISH option in the language drop down', __source: { fileName: _jsxFileName, lineNumber: 7 }, __self: undefined });
const CHINESE = /* istanbul ignore next */exports.CHINESE = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.lang.chinese', defaultMessage: '\u4E2D\u6587', description: 'Chinese option in the language drop down', __source: { fileName: _jsxFileName, lineNumber: 8 }, __self: undefined });
const GERMAN = /* istanbul ignore next */exports.GERMAN = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.lang.german', defaultMessage: 'Deutsche', description: 'German option in the language drop down', __source: { fileName: _jsxFileName, lineNumber: 9 }, __self: undefined });
const FRENCH = /* istanbul ignore next */exports.FRENCH = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.lang.french', defaultMessage: 'Fran\xE7ais', description: 'French option in the language drop down', __source: { fileName: _jsxFileName, lineNumber: 10 }, __self: undefined });


const AUTO_LOGOUT = /* istanbul ignore next */exports.AUTO_LOGOUT = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.autologout.message', defaultMessage: 'Due to session expiry, Auto Logout has been triggered!',
      description: 'Auto logout message', __source: { fileName: _jsxFileName, lineNumber: 13 }, __self: undefined });
const WRONG_CRED = /* istanbul ignore next */exports.WRONG_CRED = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.butler.fail',
      defaultMessage: 'Invalid username and/or password, please try again', description: 'Text for login failure', __source: { fileName: _jsxFileName, lineNumber: 15 }, __self: undefined });
const NO_NET = /* istanbul ignore next */exports.NO_NET = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.butler.connection.fail',
      defaultMessage: 'Connection failure', description: 'Text for connection failure', __source: { fileName: _jsxFileName, lineNumber: 17 }, __self: undefined });
const UNAUTH = /* istanbul ignore next */exports.UNAUTH = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.butler.unauthorized',
      defaultMessage: 'You are not authorized', description: 'Text for unauthorized login', __source: { fileName: _jsxFileName, lineNumber: 19 }, __self: undefined });
//success codes related to user management

const US004 = /* istanbul ignore next */exports.US004 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.success.edit', description: 'Text for successfully editing user',
      defaultMessage: 'User details updated successfully', __source: { fileName: _jsxFileName, lineNumber: 23 }, __self: undefined });
//error codes related to user management

//success realted to pps mode change
const MODE_REQUESTED = /* istanbul ignore next */exports.MODE_REQUESTED = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'ppsDetail.modeChange.success', description: 'Success Message for PPS mode',
      defaultMessage: 'PPS Mode Change Request Processed', __source: { fileName: _jsxFileName, lineNumber: 28 }, __self: undefined });

//error related to pps mode change
const E028 = /* istanbul ignore next */exports.E028 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'ppsDetail.modeChange.isAlreadyRequested', description: 'PPS is already in requested mode',
      defaultMessage: 'PPS is already in requested mode', __source: { fileName: _jsxFileName, lineNumber: 32 }, __self: undefined });
const E029 = /* istanbul ignore next */exports.E029 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'ppsDetail.modeChange.tryLater', description: 'Previous Change request is pending',
      defaultMessage: 'Previous request of changing mode is already pending, Please try later!', __source: { fileName: _jsxFileName, lineNumber: 34 }, __self: undefined });

const UE002 = /* istanbul ignore next */exports.UE002 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.usernameExists', description: 'Text for already registered username',
      defaultMessage: 'An account has already been created with this User ID', __source: { fileName: _jsxFileName, lineNumber: 37 }, __self: undefined });

const UE003 = /* istanbul ignore next */exports.UE003 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.passwordMissing', description: 'Text for passwords missing',
      defaultMessage: 'Password not provided!', __source: { fileName: _jsxFileName, lineNumber: 40 }, __self: undefined });

const UE004 = /* istanbul ignore next */exports.UE004 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.passwordMatch', description: 'Text for passwords not matching',
      defaultMessage: 'Passwords do not match!', __source: { fileName: _jsxFileName, lineNumber: 43 }, __self: undefined });

const UE005 = /* istanbul ignore next */exports.UE005 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.username', description: 'Text for missing username',
      defaultMessage: 'Username is a required field!', __source: { fileName: _jsxFileName, lineNumber: 46 }, __self: undefined });

const UE006 = /* istanbul ignore next */exports.UE006 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.role', description: 'Text for missing roles',
      defaultMessage: 'Role is a required field!', __source: { fileName: _jsxFileName, lineNumber: 49 }, __self: undefined });

//errors for info reducer
const TYPE_SUCCESS = /* istanbul ignore next */exports.TYPE_SUCCESS = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'appInfo.success', description: 'Text for success',
      defaultMessage: 'Successfull', __source: { fileName: _jsxFileName, lineNumber: 53 }, __self: undefined });

const INVALID_ID = /* istanbul ignore next */exports.INVALID_ID = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'user.invalid.id', description: 'Text for invalid user ID',
      defaultMessage: 'Please enter a valid User ID', __source: { fileName: _jsxFileName, lineNumber: 56 }, __self: undefined });

const INVALID_FORMAT = /* istanbul ignore next */exports.INVALID_FORMAT = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'user.invalid.format', description: 'Text for invalid user ID format',
      defaultMessage: 'Please use only letters (a-z), numbers, and periods', __source: { fileName: _jsxFileName, lineNumber: 59 }, __self: undefined });

const EMPTY_PWD = /* istanbul ignore next */exports.EMPTY_PWD = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'login.empty.password', description: 'Text for empty password',
      defaultMessage: 'Please enter a password', __source: { fileName: _jsxFileName, lineNumber: 62 }, __self: undefined });

const EMPTY_NAME = /* istanbul ignore next */exports.EMPTY_NAME = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'user.empty.name', description: 'Text for empty user name',
      defaultMessage: 'Please enter a user name', __source: { fileName: _jsxFileName, lineNumber: 65 }, __self: undefined });

const INVALID_NAME = /* istanbul ignore next */exports.INVALID_NAME = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'user.invalid.name', description: 'Text for invalid user name',
      defaultMessage: 'Special characters like "~","@","%" are not allowed', __source: { fileName: _jsxFileName, lineNumber: 68 }, __self: undefined });

const INVALID_PWD_OP = /* istanbul ignore next */exports.INVALID_PWD_OP = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'user.invalid.password.operator', description: 'Text for invalid password for operator',
      defaultMessage: 'Please enter a password of at least 6 alphanumeric characters', __source: { fileName: _jsxFileName, lineNumber: 71 }, __self: undefined });

const INVALID_PWD_MG = /* istanbul ignore next */exports.INVALID_PWD_MG = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'user.invalid.password.manager', description: 'Text for invalid password for manager',
      defaultMessage: 'Please enter a password of at least 8 alphanumeric characters', __source: { fileName: _jsxFileName, lineNumber: 74 }, __self: undefined });

const MATCH_PWD = /* istanbul ignore next */exports.MATCH_PWD = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'user.match.password', description: 'Text for passwords not matching',
      defaultMessage: 'Both password entered do not match. Please try again', __source: { fileName: _jsxFileName, lineNumber: 77 }, __self: undefined });



const MSU = /* istanbul ignore next */exports.MSU = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'msu.name.prefix', description: 'prefix for msu name',
      defaultMessage: 'MSU', __source: { fileName: _jsxFileName, lineNumber: 82 }, __self: undefined });

const CS = /* istanbul ignore next */exports.CS = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'chargingStation.name.prefix', description: 'prefix for charging station name',
      defaultMessage: 'CS', __source: { fileName: _jsxFileName, lineNumber: 85 }, __self: undefined });

const PPS = /* istanbul ignore next */exports.PPS = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.name.prefix', description: 'prefix for pps name',
      defaultMessage: 'PPS', __source: { fileName: _jsxFileName, lineNumber: 88 }, __self: undefined });





const INVALID_SKUID = /* istanbul ignore next */exports.INVALID_SKUID = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.invalid.sku', description: 'Text for invalid SKU ID',
      defaultMessage: 'Please enter a valid SKU Number', __source: { fileName: _jsxFileName, lineNumber: 95 }, __self: undefined });

const INVALID_LOCID = /* istanbul ignore next */exports.INVALID_LOCID = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.invalid.location', description: 'Text for invalid location ID',
      defaultMessage: 'Please enter a valid location Number', __source: { fileName: _jsxFileName, lineNumber: 98 }, __self: undefined });



// Codes for audit management
const E026 = /* istanbul ignore next */exports.E026 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.audit.location', description: 'Text for invalid location',
      defaultMessage: 'Location does not exist', __source: { fileName: _jsxFileName, lineNumber: 104 }, __self: undefined });
const E027 = /* istanbul ignore next */exports.E027 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.audit.sku', description: 'Text for invalid sku',
      defaultMessage: 'SKU does not exist', __source: { fileName: _jsxFileName, lineNumber: 106 }, __self: undefined });
const G016 = /* istanbul ignore next */exports.G016 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.audit.g016', description: 'Text for unsuccessful audit deletion',
      defaultMessage: 'Given audit does not exists', __source: { fileName: _jsxFileName, lineNumber: 108 }, __self: undefined });
const AE001 = /* istanbul ignore next */exports.AE001 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.audit.AE001', description: 'Text for invalid audit ID',
      defaultMessage: 'Audit Id does not exists', __source: { fileName: _jsxFileName, lineNumber: 110 }, __self: undefined });
const AE002 = /* istanbul ignore next */exports.AE002 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.audit.AE002', description: 'Text for invalid PPS',
      defaultMessage: 'Valid PPS not found for Audit', __source: { fileName: _jsxFileName, lineNumber: 112 }, __self: undefined });
const AE004 = /* istanbul ignore next */exports.AE004 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.audit.AE004', description: 'Text for already processed location',
      defaultMessage: 'Audit of location already under process', __source: { fileName: _jsxFileName, lineNumber: 114 }, __self: undefined });
const AE005 = /* istanbul ignore next */exports.AE005 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.audit.AE005', description: 'Text for already processed sku',
      defaultMessage: 'Audit of sku already under process', __source: { fileName: _jsxFileName, lineNumber: 116 }, __self: undefined });
const AE006 = /* istanbul ignore next */exports.AE006 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.audit.AE006', description: 'Text for already processed audit',
      defaultMessage: 'Audit ID already processed', __source: { fileName: _jsxFileName, lineNumber: 118 }, __self: undefined });
const AS001 = /* istanbul ignore next */exports.AS001 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.create.audit.success', description: 'Text for successfull audit creation',
      defaultMessage: 'New audit task created successfully', __source: { fileName: _jsxFileName, lineNumber: 120 }, __self: undefined });
const AS00A = /* istanbul ignore next */exports.AS00A = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.start.audit.success', description: 'Text for successfull audit creation',
      defaultMessage: 'PPS assigned successfully. Audit task started', __source: { fileName: _jsxFileName, lineNumber: 122 }, __self: undefined });
const AS003 = /* istanbul ignore next */exports.AS003 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.delete.audit.processed', description: 'Text for already processed audit',
      defaultMessage: 'Audit already processed. Cannot delete', __source: { fileName: _jsxFileName, lineNumber: 124 }, __self: undefined });
const AE007 = /* istanbul ignore next */exports.AE007 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.Location.audit.pending', description: 'Text for Location of audit pending for approval',
      defaultMessage: 'Location of audit pending for approval', __source: { fileName: _jsxFileName, lineNumber: 126 }, __self: undefined });
const AE008 = /* istanbul ignore next */exports.AE008 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.Location.currently.processed', description: 'Text for Location of audit currently being processed',
      defaultMessage: 'Location of audit currently being processed', __source: { fileName: _jsxFileName, lineNumber: 128 }, __self: undefined });


//Codes for Ajax Parser
const ERR_USR = /* istanbul ignore next */exports.ERR_USR = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.user.fail', description: 'Text for error in updating user',
      defaultMessage: 'Error in updating user', __source: { fileName: _jsxFileName, lineNumber: 133 }, __self: undefined });
const ERR_RES = /* istanbul ignore next */exports.ERR_RES = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.user.response', description: 'Text for error in response',
      defaultMessage: 'Error in response', __source: { fileName: _jsxFileName, lineNumber: 135 }, __self: undefined });
const ERR_AUDIT = /* istanbul ignore next */exports.ERR_AUDIT = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.audit.create', description: 'Text for error in creating audit',
      defaultMessage: 'Error in creating audit', __source: { fileName: _jsxFileName, lineNumber: 137 }, __self: undefined });
const ERR_API = /* istanbul ignore next */exports.ERR_API = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.api', description: 'Text for unregistered API response',
      defaultMessage: 'API response not registered', __source: { fileName: _jsxFileName, lineNumber: 139 }, __self: undefined });
const ERR_CONNECT = /* istanbul ignore next */exports.ERR_CONNECT = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.connection', description: 'Text for connection refused',
      defaultMessage: 'Network Failure', __source: { fileName: _jsxFileName, lineNumber: 141 }, __self: undefined });

const ERR_400 = /* istanbul ignore next */exports.ERR_400 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.400', description: 'Text for bad request',
      defaultMessage: 'Network error: 400 Bad Request', __source: { fileName: _jsxFileName, lineNumber: 144 }, __self: undefined });
const ERR_401 = /* istanbul ignore next */exports.ERR_401 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.401', description: 'Text for Unauthorizedun',
      defaultMessage: 'Network error: 401 Unauthorized', __source: { fileName: _jsxFileName, lineNumber: 146 }, __self: undefined });
const ERR_403 = /* istanbul ignore next */exports.ERR_403 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.403', description: 'Text for Forbidden',
      defaultMessage: 'Network error: 403 Forbidden', __source: { fileName: _jsxFileName, lineNumber: 148 }, __self: undefined });
const ERR_405 = /* istanbul ignore next */exports.ERR_405 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.405', description: 'Text for method not allowed',
      defaultMessage: 'Network error: 405 Method Not Allowed', __source: { fileName: _jsxFileName, lineNumber: 150 }, __self: undefined });
const ERR_408 = /* istanbul ignore next */exports.ERR_408 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.408', description: 'Text for request timeout',
      defaultMessage: 'Network error: 408 Request Time-out', __source: { fileName: _jsxFileName, lineNumber: 152 }, __self: undefined });
const ERR_409 = /* istanbul ignore next */exports.ERR_409 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.409', description: 'Text for conflict',
      defaultMessage: 'Network error: 409 Conflict', __source: { fileName: _jsxFileName, lineNumber: 154 }, __self: undefined });
const ERR_500 = /* istanbul ignore next */exports.ERR_500 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.500', description: 'Text for internal server error',
      defaultMessage: 'Network error: 500 Internal Servor Error', __source: { fileName: _jsxFileName, lineNumber: 156 }, __self: undefined });
const ERR_502 = /* istanbul ignore next */exports.ERR_502 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.error.502', description: 'Text for bad gateway',
      defaultMessage: 'Network error: 502 Bad Gateway', __source: { fileName: _jsxFileName, lineNumber: 158 }, __self: undefined });
//Inventory Tab messages
const HISTOGRAM_NO_DATA_TEXT = /* istanbul ignore next */exports.HISTOGRAM_NO_DATA_TEXT = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'inventory.histogram.noDataText', description: 'Inventory Histogram No Data Text',
      defaultMessage: 'No Stock Found', __source: { fileName: _jsxFileName, lineNumber: 161 }, __self: undefined });


//Messages for user forms
const MG_PWD = /* istanbul ignore next */exports.MG_PWD = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'users.add.password.subheading.manager', description: 'Subheading for create password',
      defaultMessage: 'A password of at least 8 alphanumeric characters will be required for logging into the Management Interface and Operator Interface', __source: { fileName: _jsxFileName, lineNumber: 166 }, __self: undefined });
const OP_PWD = /* istanbul ignore next */exports.OP_PWD = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'users.add.password.subheading.operator', description: 'Subheading for create password operator',
      defaultMessage: 'A password of 6 digits will be required for logging into the Operator Interface.', __source: { fileName: _jsxFileName, lineNumber: 168 }, __self: undefined });

//Messages for emergency
const E051 = /* istanbul ignore next */exports.E051 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'emergency.resume.coreerror', description: 'Error while resuming operation',
      defaultMessage: 'Cannot connect to butler core', __source: { fileName: _jsxFileName, lineNumber: 172 }, __self: undefined });
const E052 = /* istanbul ignore next */exports.E052 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'emergency.resume.statuserror', description: 'Error while resuming operation',
      defaultMessage: 'Emergency status not soft_manual', __source: { fileName: _jsxFileName, lineNumber: 174 }, __self: undefined });
const E135 = /* istanbul ignore next */exports.E135 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'emergency.resume.Softemergency', description: 'Soft emergency still there',
      defaultMessage: 'Soft emergency still there', __source: { fileName: _jsxFileName, lineNumber: 176 }, __self: undefined });

const ES = /* istanbul ignore next */exports.ES = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'emergency.resume.success', description: 'Operations resumed',
      defaultMessage: 'Operation resumed', __source: { fileName: _jsxFileName, lineNumber: 179 }, __self: undefined });

//Message for Master File upload
const fileUploadMessages = /* istanbul ignore next */exports.fileUploadMessages = {
      "utility002": /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'masterdata.maxlimit.records', description: 'Records in file should not be greater than',
            defaultMessage: 'Records in file should not be greater than', __source: { fileName: _jsxFileName, lineNumber: 184 }, __self: undefined }),
      "utility001": /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'masterdata.maxlimit.filesize', description: 'File size should not be greater than',
            defaultMessage: 'File size should not be greater than', __source: { fileName: _jsxFileName, lineNumber: 186 }, __self: undefined }) };



const g020 = /* istanbul ignore next */exports.g020 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.cancellation.error.g020', description: 'Internal server error while requesting for audit cancel',
      defaultMessage: 'Internal server error while requesting for audit cancel', __source: { fileName: _jsxFileName, lineNumber: 191 }, __self: undefined });
const g021 = /* istanbul ignore next */exports.g021 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.cancellation.error.g021', description: 'Audit Id already sent for cancellation',
      defaultMessage: 'Audit Id already sent for cancellation', __source: { fileName: _jsxFileName, lineNumber: 193 }, __self: undefined });
const g023 = /* istanbul ignore next */exports.g023 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.cancellation.error.g023', description: 'Audit Id already successfully cancelled',
      defaultMessage: 'Audit Id already successfully cancelled', __source: { fileName: _jsxFileName, lineNumber: 195 }, __self: undefined });
const g024 = /* istanbul ignore next */exports.g024 = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.cancellation.error.g024', description: 'Audit cancellation request denied',
      defaultMessage: 'Audit cancellation request denied', __source: { fileName: _jsxFileName, lineNumber: 197 }, __self: undefined });
/*Message for status change notification*/
const allStatusSuccess = /* istanbul ignore next */exports.allStatusSuccess = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.statusChange.allStatusSuccess', description: 'Records in file should not be greater than',
      defaultMessage: 'Status change request successful', __source: { fileName: _jsxFileName, lineNumber: 200 }, __self: undefined });

const allModeSuccess = /* istanbul ignore next */exports.allModeSuccess = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.modeChange.allModeSuccess', description: 'Records in file should not be greater than',
      defaultMessage: 'Mode change request successful', __source: { fileName: _jsxFileName, lineNumber: 203 }, __self: undefined });
const ppsModeFailure = /* istanbul ignore next */exports.ppsModeFailure = "{unsuccessful}/{totalCount} mode change requests rejected";
const ppsStatusFailure = /* istanbul ignore next */exports.ppsStatusFailure = "{unsuccessful}/{totalCount} status change requests rejected";
const ppsModeSuccess = /* istanbul ignore next */exports.ppsModeSuccess = "Mode change request successful";
const ppsStatusSuccess = /* istanbul ignore next */exports.ppsStatusSuccess = "Status change request successful";

/*Zoning messages*/
const ZONE_STATUS_INTL_MESSAGE = /* istanbul ignore next */exports.ZONE_STATUS_INTL_MESSAGE = {
      operation_normal: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.normal', description: 'Status text for zone',
            defaultMessage: 'OPERATING', __source: { fileName: _jsxFileName, lineNumber: 212 }, __self: undefined }),
      zone_pause_initiated: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.pauseInit', description: 'Status text for zone',
            defaultMessage: 'PAUSE INITIATED', __source: { fileName: _jsxFileName, lineNumber: 214 }, __self: undefined }),
      zone_pause_activated: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.pauseActivated', description: 'Status text for zone',
            defaultMessage: 'PAUSE ACTIVATED', __source: { fileName: _jsxFileName, lineNumber: 216 }, __self: undefined }),
      zone_pause_deactivated: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.pauseDeactive', description: 'Status text for zone',
            defaultMessage: 'PAUSE DEACTIVATED', __source: { fileName: _jsxFileName, lineNumber: 218 }, __self: undefined }),
      zone_clear_initiated: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.clearInit', description: 'Status text for zone',
            defaultMessage: 'CLEAR INITIATED', __source: { fileName: _jsxFileName, lineNumber: 220 }, __self: undefined }),
      zone_clear_activated: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.clearActive', description: 'Status text for zone',
            defaultMessage: 'CLEAR ACTIVATED', __source: { fileName: _jsxFileName, lineNumber: 222 }, __self: undefined }),
      zone_clear_deactivated: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.clearDeactivated', description: 'Status text for zone',
            defaultMessage: 'CLEAR DEACTIVATED', __source: { fileName: _jsxFileName, lineNumber: 224 }, __self: undefined }),
      emergency_stop: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.emergencyStop', description: 'Status text for zone',
            defaultMessage: 'EMERGENCY STOP', __source: { fileName: _jsxFileName, lineNumber: 226 }, __self: undefined }),
      emergency_pause: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.emergencyPause', description: 'Status text for zone',
            defaultMessage: 'EMERGENCY PAUSE', __source: { fileName: _jsxFileName, lineNumber: 228 }, __self: undefined }),
      stopped: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.stopped', description: 'Status text for zone',
            defaultMessage: 'STOPPED', __source: { fileName: _jsxFileName, lineNumber: 230 }, __self: undefined }),
      paused: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.status.paused', description: 'Status text for zone',
            defaultMessage: 'PAUSED', __source: { fileName: _jsxFileName, lineNumber: 232 }, __self: undefined }) };


const CONTROLLER_ACTION_TRIGGERED_MESSAGES = /* istanbul ignore next */exports.CONTROLLER_ACTION_TRIGGERED_MESSAGES = {
      zone_pause: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.zone_pause', description: 'Status text for zone',
            defaultMessage: 'Zone pause activated', __source: { fileName: _jsxFileName, lineNumber: 237 }, __self: undefined }),
      zone_clear: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.zone_clear', description: 'Status text for zone',
            defaultMessage: 'Zone clear activated', __source: { fileName: _jsxFileName, lineNumber: 239 }, __self: undefined }),
      emergency_stop: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.emergency_stop', description: 'Status text for zone',
            defaultMessage: 'Emergency stop activated', __source: { fileName: _jsxFileName, lineNumber: 241 }, __self: undefined }),
      emergency_pause: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.emergency_pause', description: 'Status text for zone',
            defaultMessage: 'Emergency pause activated', __source: { fileName: _jsxFileName, lineNumber: 243 }, __self: undefined }),
      none: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.none', description: 'Status text for zone',
            defaultMessage: 'Standard', __source: { fileName: _jsxFileName, lineNumber: 245 }, __self: undefined }) };

const CONTROLLER_SENSOR_TRIGGERED_MESSAGES = /* istanbul ignore next */exports.CONTROLLER_SENSOR_TRIGGERED_MESSAGES = {
      button_press: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.button_press', description: 'Status text for zone',
            defaultMessage: 'Button pressed', __source: { fileName: _jsxFileName, lineNumber: 249 }, __self: undefined }),
      emergency_stop_button_press: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.emergency_stop_button_press', description: 'Status text for zone',
            defaultMessage: 'Emergency stop button pressed', __source: { fileName: _jsxFileName, lineNumber: 251 }, __self: undefined }),
      emergency_pause_button_press: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.emergency_pause_button_press', description: 'Status text for zone',
            defaultMessage: 'Emergency pause button pressed', __source: { fileName: _jsxFileName, lineNumber: 253 }, __self: undefined }),
      latch_gate: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.latch_gate', description: 'Status text for zone',
            defaultMessage: 'Entry gate breached', __source: { fileName: _jsxFileName, lineNumber: 255 }, __self: undefined }),
      light_curtain: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.light_curtain', description: 'Status text for zone',
            defaultMessage: 'Light curtains breached', __source: { fileName: _jsxFileName, lineNumber: 257 }, __self: undefined }),
      none: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.action.noneSensor', description: 'Status text for zone',
            defaultMessage: 'Standard', __source: { fileName: _jsxFileName, lineNumber: 259 }, __self: undefined })

      /*Messages for operations logs*/ };
const REQUEST_REPORT_SUCCESS = /* istanbul ignore next */exports.REQUEST_REPORT_SUCCESS = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operationsLog.reportRequest.success', description: 'Status text for zone',
      defaultMessage: 'Request successfully generated. Kindly check the Downloads Tab', __source: { fileName: _jsxFileName, lineNumber: 263 }, __self: undefined });
const REQUEST_REPORT_FAILURE = /* istanbul ignore next */exports.REQUEST_REPORT_FAILURE = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operationsLog.reportRequest.failure', description: 'Status text for zone',
      defaultMessage: 'Error creating request', __source: { fileName: _jsxFileName, lineNumber: 265 }, __self: undefined });

const ZONE_SUB_STATUS_INTL_MESSAGE = /* istanbul ignore next */exports.ZONE_SUB_STATUS_INTL_MESSAGE = {
      zone_pause: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.substatus.action.zone_pause', description: 'Status text for zone',
            defaultMessage: 'Zone pause activated', __source: { fileName: _jsxFileName, lineNumber: 269 }, __self: undefined }),
      zone_clear: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.substatus.action.zone_clear', description: 'Status text for zone',
            defaultMessage: 'Zone clear activated', __source: { fileName: _jsxFileName, lineNumber: 271 }, __self: undefined }),
      emergency_stop: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.substatus.action.emergency_stop', description: 'Status text for zone',
            defaultMessage: 'Emergency stop activated', __source: { fileName: _jsxFileName, lineNumber: 273 }, __self: undefined }),
      emergency_pause: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.substatus.action.emergency_pause', description: 'Status text for zone',
            defaultMessage: 'Emergency pause activated', __source: { fileName: _jsxFileName, lineNumber: 275 }, __self: undefined }) };


const ENTITY_BREACHED = /* istanbul ignore next */exports.ENTITY_BREACHED = {
      light_curtain: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.entity.lightCurtains', description: 'Status text for zone',
            defaultMessage: 'Light Curtain', __source: { fileName: _jsxFileName, lineNumber: 280 }, __self: undefined }),
      latch_gate: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'zoning.entity.latchGate', description: 'Status text for zone',
            defaultMessage: 'Latch Gate', __source: { fileName: _jsxFileName, lineNumber: 282 }, __self: undefined }) };