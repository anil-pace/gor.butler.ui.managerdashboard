/* istanbul ignore next */"use strict";Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = "/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/gor-dropdown-component/list.js";var /* istanbul ignore next */_react = require("react"); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class List extends /* istanbul ignore next */_react.Component {
  constructor(props) {
    super(props);
  }
  _processOptions() {
    var optionList = [],data = this.props.data || [],
    optionsLen = data.length;
    for (let index = 0; index < optionsLen; index++) {

      optionList.push( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"span", /* istanbul ignore next */{ className: data[index].disabled ? "disabled gor-dropdown-option" : "gor-dropdown-option", key: index, onClick: !data[index].disabled ? this.props.optionAction.bind(null, data[index].value, null) : null, __source: { fileName: _jsxFileName, lineNumber: 12 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"span", /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 13 }, __self: this }, data[index].label),
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"span", /* istanbul ignore next */{ className: this.props.listItemIcon && this.props.placeholder === data[index].label ? this.props.listItemIcon : "gor-action-icon-none", __source: { fileName: _jsxFileName, lineNumber: 14 }, __self: this })));

    }
    return optionList;
  }
  componentWillReceiveProps(nextProps) {
    if (nextProps.data.length !== this.props.data.length) {
      this.props.optionAction.call(null, this.props.selectedOption, true);
    }
  }
  componentDidMount() {
    this.props.data && this.props.selectedOption ? this.props.optionAction.call(null, this.props.selectedOption, true) : "";
  }
  render() {
    var optionList = this._processOptions();
    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"span", /* istanbul ignore next */{ className: "gor-option-wrapper",
          style: this.props.dropDownVisible ? { display: 'block' } : { display: 'none' }, __source: { fileName: _jsxFileName, lineNumber: 30 }, __self: this },
        optionList));

  }} /* istanbul ignore next */exports.default =


List;