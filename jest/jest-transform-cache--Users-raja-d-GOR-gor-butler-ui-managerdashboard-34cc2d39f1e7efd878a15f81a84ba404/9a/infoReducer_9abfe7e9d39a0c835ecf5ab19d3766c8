/* istanbul ignore next */"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.









appInfo = appInfo;var /* istanbul ignore next */_frontEndConstants = require("../constants/frontEndConstants"); /**
                                                                                                                 * @param  {State Object}
                                                                                                                 * @param  {Action object}
                                                                                                                 * @return {[Object] updated state}
                                                                                                                 */function appInfo(state = {}, action) {switch (action.type) {case /* istanbul ignore next */_frontEndConstants.LOGIN_ERROR:let errorMsg = action.data,loginInfo;
      loginInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: errorMsg };

      return Object.assign({}, state, {
        "loginInfo": loginInfo });

    case /* istanbul ignore next */_frontEndConstants.ID_DATA:
      return Object.assign({}, state, {
        "idInfo": action.data });

    case /* istanbul ignore next */_frontEndConstants.NAME_DATA:

      return Object.assign({}, state, {
        "nameInfo": action.data });

    case /* istanbul ignore next */_frontEndConstants.PASSWORD_DATA:
      return Object.assign({}, state, {
        "passwordInfo": action.data });

    case /* istanbul ignore next */_frontEndConstants.INFO_RESET:
      return Object.assign({}, state, {
        "idInfo": null,
        "nameInfo": null,
        "passwordInfo": null,
        "loginInfo": null,
        "roleSet": null });

    case /* istanbul ignore next */_frontEndConstants.PASSWORD_BUTTON_RESET:
      return Object.assign({}, state, {
        "passwordInfo": null });

    case /* istanbul ignore next */_frontEndConstants.NOTIFY_PASS:
      let notifyMsg = action.data,notifyPass;
      notifyPass = {
        type: /* istanbul ignore next */_frontEndConstants.GOR_PASS,
        icon: /* istanbul ignore next */_frontEndConstants.TICK_WHITE,
        msg: notifyMsg };

      return Object.assign({}, state, {
        "notifyInfo": notifyPass });



    case /* istanbul ignore next */_frontEndConstants.NOTIFY_DELETE:
      let notifyDel = action.data,notifyDelInfo;
      notifyDelInfo = {
        type: /* istanbul ignore next */_frontEndConstants.GOR_PASS,
        icon: /* istanbul ignore next */_frontEndConstants.REMOVE_ICON,
        msg: notifyDel };

      return Object.assign({}, state, {
        "notifyInfo": notifyDelInfo });

    case /* istanbul ignore next */_frontEndConstants.NOTIFY_FAIL:
      let notifyErr = action.data,notifyErrInfo;
      notifyErrInfo = {
        type: /* istanbul ignore next */_frontEndConstants.GOR_FAIL,
        icon: /* istanbul ignore next */_frontEndConstants.ERROR_WHITE,
        msg: notifyErr };

      return Object.assign({}, state, {
        "notifyInfo": notifyErrInfo });

    case /* istanbul ignore next */_frontEndConstants.NOTIFY_INFO:
      let notifyInfoMsg = action.data,notifyInfo;
      notifyInfo = {
        type: /* istanbul ignore next */_frontEndConstants.GOR_INFO,
        icon: /* istanbul ignore next */_frontEndConstants.TICK_WHITE,
        msg: notifyInfoMsg };

      return Object.assign({}, state, {
        "notifyInfo": notifyInfo });

    case /* istanbul ignore next */_frontEndConstants.NOTIFY_HIDE:
      let notifyHide;
      notifyHide = {
        type: /* istanbul ignore next */_frontEndConstants.HIDE };

      return Object.assign({}, state, {
        "notifyInfo": notifyHide });

    case /* istanbul ignore next */_frontEndConstants.ID_MAP:
      let roleList;
      roleList = action.data;
      return Object.assign({}, state, {
        "roleList": roleList });

    case /* istanbul ignore next */_frontEndConstants.SET_ROLE:
      let roleSet;
      roleSet = action.data;
      return Object.assign({}, state, {
        "roleSet": roleSet });

    case /* istanbul ignore next */_frontEndConstants.SKU_DATA:
      return Object.assign({}, state, {
        "skuInfo": action.data });

    case /* istanbul ignore next */_frontEndConstants.LOC_DATA:
      return Object.assign({}, state, {
        "locInfo": action.data });

    default:
      return state;}

}