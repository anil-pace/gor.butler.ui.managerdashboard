/* istanbul ignore next */"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.





auditInfo = auditInfo;var /* istanbul ignore next */_frontEndConstants = require("../constants/frontEndConstants"); /**
                                                                                                                     * @param  {State Object}
                                                                                                                     * @param  {Action object}
                                                                                                                     * @return {[Object] updated state}
                                                                                                                     */function auditInfo(state = {}, action) {switch (action.type) {case /* istanbul ignore next */_frontEndConstants.AUDIT_DATA:var res,auditData = {};
      res = action.data;
      if (res.aggregate_data) {
        if (res.aggregate_data.total_audited)
        auditData.total_audited = Number(res.aggregate_data.total_audited);

      }
      return Object.assign({}, state, {
        "auditData": auditData });

      break;

    case /* istanbul ignore next */_frontEndConstants.SET_AUDIT:
      return Object.assign({}, state, {
        "auditType": action.data });

      break;

    case /* istanbul ignore next */_frontEndConstants.RESET_AUDIT:
      return Object.assign({}, state, {
        "auditType": null });

      break;
    case /* istanbul ignore next */_frontEndConstants.SETAUDIT_PPS:
      return Object.assign({}, state, {
        "ppsList": action.data });

      break;

    case /* istanbul ignore next */_frontEndConstants.VALIDATE_SKU_SPINNER:
      return Object.assign({}, state, {
        "skuValidationSpinner": action.data });

      break;

    case /* istanbul ignore next */_frontEndConstants.VALIDATED_ATTIBUTES_DATA:
      return Object.assign({}, state, {
        "skuAttributes": action.data });

      break;

    case /* istanbul ignore next */_frontEndConstants.TEXTBOX_STATUS:
      return Object.assign({}, state, {
        "textBoxStatus": action.data });

      break;

    case /* istanbul ignore next */_frontEndConstants.AUDIT_LIST_REFRESHED:
      return Object.assign({}, state, {
        "auditListRefreshed": new Date() });


    default:
      return state;}

}