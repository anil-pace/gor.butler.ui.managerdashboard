/* istanbul ignore next */"use strict";Object.defineProperty(exports, "__esModule", { value: true });var cov_1sgisod6w5 = function () {var path = "/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/spinner/Spinner.js",hash = "cb07ec611f4589b5edc91c5f83b613cc83c18b49",global = new Function('return this')(),gcv = "__coverage__",coverageData = { path: "/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/spinner/Spinner.js", statementMap: { "0": { start: { line: 11, column: 3 }, end: { line: 11, column: 16 } }, "1": { start: { line: 15, column: 3 }, end: { line: 19, column: 3 } }, "2": { start: { line: 17, column: 6 }, end: { line: 17, column: 63 } }, "3": { start: { line: 25, column: 6 }, end: { line: 29, column: 9 } }, "4": { start: { line: 36, column: 1 }, end: { line: 43, column: 1 } } }, fnMap: { "0": { name: "(anonymous_0)", decl: { start: { line: 9, column: 2 }, end: { line: 9, column: 3 } }, loc: { start: { line: 10, column: 2 }, end: { line: 12, column: 2 } }, line: 10 }, "1": { name: "(anonymous_1)", decl: { start: { line: 14, column: 1 }, end: { line: 14, column: 2 } }, loc: { start: { line: 14, column: 20 }, end: { line: 20, column: 1 } }, line: 14 }, "2": { name: "(anonymous_2)", decl: { start: { line: 24, column: 4 }, end: { line: 24, column: 5 } }, loc: { start: { line: 24, column: 12 }, end: { line: 30, column: 5 } }, line: 24 } }, branchMap: { "0": { loc: { start: { line: 15, column: 3 }, end: { line: 19, column: 3 } }, type: "if", locations: [{ start: { line: 15, column: 3 }, end: { line: 19, column: 3 } }, { start: { line: 15, column: 3 }, end: { line: 19, column: 3 } }], line: 15 }, "1": { loc: { start: { line: 26, column: 34 }, end: { line: 26, column: 65 } }, type: "binary-expr", locations: [{ start: { line: 26, column: 34 }, end: { line: 26, column: 59 } }, { start: { line: 26, column: 63 }, end: { line: 26, column: 65 } }], line: 26 }, "2": { loc: { start: { line: 26, column: 75 }, end: { line: 26, column: 134 } }, type: "cond-expr", locations: [{ start: { line: 26, column: 98 }, end: { line: 26, column: 115 } }, { start: { line: 26, column: 118 }, end: { line: 26, column: 134 } }], line: 26 } }, s: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0 }, f: { "0": 0, "1": 0, "2": 0 }, b: { "0": [0, 0], "1": [0, 0], "2": [0, 0] }, _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c" },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var _jsxFileName = "/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/spinner/Spinner.js";
var /* istanbul ignore next */_react = require("react"); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class Spinner extends /* istanbul ignore next */_react2.default.Component {
  /**
                                                                            * Called once before rendering of component,used to displatch fetch action
                                                                            * @return {[type]}
                                                                            */
  constructor(props)
  {/* istanbul ignore next */++cov_1sgisod6w5.f[0];++cov_1sgisod6w5.s[0];
    super(props);
  }

  componentDidMount() {/* istanbul ignore next */++cov_1sgisod6w5.f[1];++cov_1sgisod6w5.s[1];
    if (this.props.setSpinner) {/* istanbul ignore next */++cov_1sgisod6w5.b[0][0];
      {/* istanbul ignore next */++cov_1sgisod6w5.s[2];
        setTimeout(this.props.setSpinner.bind(this, false), 5000);
      }
    } else /* istanbul ignore next */{++cov_1sgisod6w5.b[0][1];}
  }
  /**Render method called when component react renders
     * @return {[type]}
     */
  render() {/* istanbul ignore next */++cov_1sgisod6w5.f[2];++cov_1sgisod6w5.s[3];
    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "loader " + ( /* istanbul ignore next */(++cov_1sgisod6w5.b[1][0], this.props.utilClassNames) || /* istanbul ignore next */(++cov_1sgisod6w5.b[1][1], "")), style: this.props.isLoading ? /* istanbul ignore next */(++cov_1sgisod6w5.b[2][0], { display: 'block' }) : /* istanbul ignore next */(++cov_1sgisod6w5.b[2][1], { display: 'none' }), __source: { fileName: _jsxFileName, lineNumber: 26 }, __self: this },
        this.props.children));


  }}
;
/**
   * [Passing Router to component through context]
   * @type {Object}
   */ /* istanbul ignore next */++cov_1sgisod6w5.s[4];
Spinner.propTypes = {
  utilClassNames: /* istanbul ignore next */_react2.default.PropTypes.string,
  isLoading: /* istanbul ignore next */_react2.default.PropTypes.bool,
  children: /* istanbul ignore next */_react2.default.PropTypes.oneOfType([
  /* istanbul ignore next */_react2.default.PropTypes.arrayOf( /* istanbul ignore next */_react2.default.PropTypes.node),
  /* istanbul ignore next */_react2.default.PropTypes.node]) }; /* istanbul ignore next */exports.default =


Spinner;