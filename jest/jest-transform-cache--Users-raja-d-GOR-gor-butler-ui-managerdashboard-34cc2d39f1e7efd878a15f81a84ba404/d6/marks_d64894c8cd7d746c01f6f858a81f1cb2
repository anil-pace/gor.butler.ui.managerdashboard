/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/rangeSlider/common/marks.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_classnames = require('classnames'); /* istanbul ignore next */var _classnames2 = _interopRequireDefault(_classnames);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

const Marks = ({
  className,
  vertical,
  marks,
  included,
  upperBound,
  lowerBound,
  max, min }) =>
{
  const marksKeys = Object.keys(marks);
  const marksCount = marksKeys.length;
  const unit = 100 / (marksCount - 1);
  const markWidth = unit * 0.9;

  const range = max - min;
  const elements = marksKeys.map(parseFloat).sort((a, b) => a - b).map(point => {
    const isActive = !included && point === upperBound ||
    included && point <= upperBound && point >= lowerBound;
    const markClassName = /* istanbul ignore next */(0, _classnames2.default)({
      [`${className}-text`]: true,
      [`${className}-text-active`]: isActive });


    const bottomStyle = {
      marginBottom: '-50%',
      bottom: `${(point - min) / range * 100}%` };


    const leftStyle = {
      width: `${markWidth}%`,
      marginLeft: `${-markWidth / 2}%`,
      left: `${(point - min) / range * 100}%` };


    const style = vertical ? bottomStyle : leftStyle;

    const markPoint = marks[point];
    const markPointIsObject = typeof markPoint === 'object' &&
    ! /* istanbul ignore next */_react2.default.isValidElement(markPoint);
    const markLabel = markPointIsObject ? markPoint.label : markPoint;
    const markStyle = markPointIsObject ? /* istanbul ignore next */Object.assign({},
    style, markPoint.style) : style;
    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{
          className: markClassName,
          style: markStyle,
          key: point, __source: { fileName: _jsxFileName, lineNumber: 47 }, __self: undefined },

        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'sup', /* istanbul ignore next */{ className: "rc-markSup", __source: { fileName: _jsxFileName, lineNumber: 52 }, __self: undefined }, "|"),
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: "rc-markValue", __source: { fileName: _jsxFileName, lineNumber: 53 }, __self: undefined }, markLabel)));


  });

  return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: className, __source: { fileName: _jsxFileName, lineNumber: 58 }, __self: undefined }, elements));
}; /* istanbul ignore next */exports.default =

Marks;