/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/containers/emergencyProcess/OperationStop.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_tabActions = require('../../actions/tabActions'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class OperationStop extends /* istanbul ignore next */_react2.default.Component {
  removeThisModal() {
    this.props.removeModal();
    //this.props.setEmergencyModalStatus(false);
  }
  componentWillReceiveProps(nextProps) {
    if (!nextProps.auth_token || !nextProps.system_emergency || nextProps.system_data !== this.props.system_data)
    {
      this.removeThisModal();
    }
  }

  render()
  {
    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-emergency-overlay', __source: { fileName: _jsxFileName, lineNumber: 21 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-delete gor-modal-content gor-operation-stop', __source: { fileName: _jsxFileName, lineNumber: 22 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'close', onClick: this.removeThisModal.bind(this), __source: { fileName: _jsxFileName, lineNumber: 23 }, __self: this }, /* istanbul ignore next */'\xD7'),
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-delete-text', __source: { fileName: _jsxFileName, lineNumber: 24 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-alert-lg', __source: { fileName: _jsxFileName, lineNumber: 25 }, __self: this }),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-delete-line', __source: { fileName: _jsxFileName, lineNumber: 26 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-delete-query gor-error-lg', __source: { fileName: _jsxFileName, lineNumber: 27 }, __self: this }, this.props.emergencyPress ? /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.alert.stop',
                  defaultMessage: 'Butler System - Operation Stopped',
                  description: 'Text for operation stopped heading', __source: { fileName: _jsxFileName, lineNumber: 27 }, __self: this }) : "")),


            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-margin-top', __source: { fileName: _jsxFileName, lineNumber: 32 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-error-md', __source: { fileName: _jsxFileName, lineNumber: 33 }, __self: this },
                this.props.poeEnabled ? /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.alert.stop.text',
                  defaultMessage: 'Emergency-Stop activated via Conroller {controller} in {zone}.',
                  description: 'Text for emergency button press',
                  values: {
                    controller: this.props.controller,
                    zone: this.props.zone }, __source: { fileName: _jsxFileName, lineNumber: 34 }, __self: this }) :
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.alert.stop.nonPOE',
                  defaultMessage: 'Operation Stopped',
                  description: 'Text for operation stopped heading', __source: { fileName: _jsxFileName, lineNumber: 40 }, __self: this })),

              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-text-sm', __source: { fileName: _jsxFileName, lineNumber: 44 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.alert.stop.subtext',
                  defaultMessage: 'You must check the emergency situation and release the Emergency Stop button in order to resume the operation in warehouse',
                  description: 'Subtext for pause alert', __source: { fileName: _jsxFileName, lineNumber: 45 }, __self: this })))))));






  }}
;
function mapStateToProps(state, ownProps) {
  return {
    auth_token: state.authLogin.auth_token,
    system_emergency: state.tabsData.system_emergency || false,
    system_data: state.tabsData.system_data || null };

}
/*function mapDispatchToProps(dispatch){
    return{
      setEmergencyModalStatus:function(data){dispatch(setEmergencyModalStatus(data));}
    }
  } */

OperationStop.propTypes = {
  auth_token: /* istanbul ignore next */_react2.default.PropTypes.string,
  userRequest: /* istanbul ignore next */_react2.default.PropTypes.func,
  emergencyPress: /* istanbul ignore next */_react2.default.PropTypes.bool,
  system_emergency: /* istanbul ignore next */_react2.default.PropTypes.bool,
  system_data: /* istanbul ignore next */_react2.default.PropTypes.string,
  poeEnabled: /* istanbul ignore next */_react2.default.PropTypes.bool }; /* istanbul ignore next */exports.default =



/* istanbul ignore next */(0, _reactRedux.connect)(mapStateToProps, null)(OperationStop);