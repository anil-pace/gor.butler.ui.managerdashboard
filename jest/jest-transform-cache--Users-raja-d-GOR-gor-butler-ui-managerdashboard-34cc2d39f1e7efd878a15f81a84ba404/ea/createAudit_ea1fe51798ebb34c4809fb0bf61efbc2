/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/containers/auditTab/createAudit.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_validationActions = require('../../actions/validationActions');
var /* istanbul ignore next */_auditActions = require('../../actions/auditActions');
var /* istanbul ignore next */_userActions = require('../../actions/userActions');
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_frontEndConstants = require('../../constants/frontEndConstants');
var /* istanbul ignore next */_configConstants = require('../../constants/configConstants');
var /* istanbul ignore next */_fielderror = require('../../components/fielderror/fielderror'); /* istanbul ignore next */var _fielderror2 = _interopRequireDefault(_fielderror);
var /* istanbul ignore next */_fieldCheck = require('../../utilities/fieldCheck');
var /* istanbul ignore next */_searchDropdown = require('../../components/dropdown/searchDropdown'); /* istanbul ignore next */var _searchDropdown2 = _interopRequireDefault(_searchDropdown);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}


class CreateAudit extends /* istanbul ignore next */_react2.default.Component {
  constructor(props)
  {
    super(props);
    var selectedList = [];
    this.state = { selected: selectedList, confirmedSku: null, currentSku: "" };
  }
  componentWillUnmount()
  {
    this.props.resetAuditType();
    this.props.resetForm();
  }

  componentWillMount() {

    var initialSkuInfo = {},initialAttributes;
    var selectedList = [];
    this.state = { selected: selectedList };
    this.selectedList = [];
    this.noSkuValidation = true;
    this.props.validateSKU(initialSkuInfo);
    this.props.validateSKUcodeSpinner(false);
    this.props.auditValidatedAttributes(initialAttributes);
  }
  _removeThisModal() {
    this.props.removeModal();
  }
  componentWillReceiveProps(nextProps) {
    if (!nextProps.auth_token)
    {
      this._removeThisModal();
    }
  }
  _selectedAttributes(selectedList) {
    this.setState({ selected: selectedList });
  }
  _validSku() {
    var initialAttributes;
    let urlData = {
      'url': /* istanbul ignore next */_configConstants.SKU_VALIDATION_URL + this.skuId.value,
      'method': /* istanbul ignore next */_frontEndConstants.GET,
      'cause': /* istanbul ignore next */_frontEndConstants.VALIDATE_SKU_ID,
      'token': this.props.auth_token,
      'contentType': /* istanbul ignore next */_frontEndConstants.APP_JSON };

    this.props.auditValidatedAttributes(initialAttributes);
    this.props.validateSKUcodeSpinner(true);
    this.props.validateSKUcode(urlData);
    this.noSkuValidation = false;
    this.setState({ confirmedSku: this.skuId.value });
  }
  _checkSku(skuId) {
    let skuInfo;
    skuInfo = /* istanbul ignore next */(0, _fieldCheck.skuStatus)(skuId);
    this.props.validateSKU(skuInfo);
    return skuInfo.type;
  }
  _checkLocation(locId) {
    let locInfo;
    locInfo = /* istanbul ignore next */(0, _fieldCheck.locationStatus)(locId);
    this.props.validateLoc(locInfo);
    return locInfo.type;
  }
  _checkType() {
    let op, md;
    op = this.sku;
    md = this.location;
    if (op.checked)
    {
      this.props.setAuditType(op.value);
    } else
    if (md.checked)
    {
      this.props.setAuditType(md.value);
    }
  }
  _handleAddaudit(e)
  {
    e.preventDefault();
    let op, md, sku, loc, formdata;
    op = this.sku;
    md = this.location;
    sku = this.skuId.value;
    loc = this.locationId.value;
    if ((this.skuState === /* istanbul ignore next */_frontEndConstants.NO_ATTRIBUTE_SKU || !this.state.selected.length) && this.props.auditType !== /* istanbul ignore next */_frontEndConstants.LOCATION) //if sku has no attributes || sku has attributes but not 
      {//doing audit by pdfa
        if (!this._checkSku(sku))
        return;
        formdata = {
          audit_param_type: op.value,
          audit_param_value: sku };

      } else
    if (this.skuState === /* istanbul ignore next */_frontEndConstants.VALID_SKU && this.state.selected.length) {//sku has attributes and doing audit by pdfa
      formdata = {};
      formdata["audit_param_type"] = "pdfa";
      formdata["audit_param_value"] = {};
      formdata["audit_param_value"]["product_sku"] = sku;
      formdata["audit_param_value"]["pdfa_values"] = {};
      formdata["audit_param_value"]["pdfa_values"][this.keys] = this.state.selected;
    } else


    {
      if (!this._checkLocation(loc))
      return;
      formdata = {
        audit_param_type: md.value,
        audit_param_value: loc };

    }
    let userData = {
      'url': /* istanbul ignore next */_configConstants.AUDIT_URL,
      'formdata': formdata,
      'method': /* istanbul ignore next */_frontEndConstants.POST,
      'cause': /* istanbul ignore next */_frontEndConstants.CREATE_AUDIT,
      'contentType': /* istanbul ignore next */_frontEndConstants.APP_JSON,
      'accept': /* istanbul ignore next */_frontEndConstants.APP_JSON,
      'token': this.props.auth_token };

    this.props.userRequest(userData);
    this.props.removeModal();
  }

  _claculateSkuState(processedSkuResponse) {
    var skuState = this.noSkuValidation ? /* istanbul ignore next */_frontEndConstants.NO_SKU_VALIDATION : !processedSkuResponse.isValid ? /* istanbul ignore next */_frontEndConstants.SKU_NOT_EXISTS : processedSkuResponse.hasAttribute ? /* istanbul ignore next */_frontEndConstants.VALID_SKU : /* istanbul ignore next */_frontEndConstants.NO_ATTRIBUTE_SKU;
    skuState = this.props.skuValidationResponse ? /* istanbul ignore next */_frontEndConstants.WATING_FOR_VALIDATION : skuState;
    this.skuState = skuState;
    return skuState;
  }

  _processSkuAttributes() {

    var keys = [],hasAttribute = false,isValid = false;
    var skuAttributeData = { keys: keys, hasAttribute: hasAttribute, isValid: isValid };
    if (this.props.skuAttributes && this.props.skuAttributes.audit_attributes_values) {
      isValid = true;
      for (var key in this.props.skuAttributes.audit_attributes_values) {
        if (this.props.skuAttributes.audit_attributes_values.hasOwnProperty(key)) {
          keys.push(key);
          if (this.props.skuAttributes.audit_attributes_values[key].length) {
            hasAttribute = true;
          }
        }
      }
    }
    skuAttributeData = { keys: keys, hasAttribute: hasAttribute, isValid: isValid };
    this.keys = keys[0]; // harcoding since backend support only one entry
    return skuAttributeData;
  }

  _searchDropdownEntries(skuState, processedSkuResponse) {
    if (skuState === /* istanbul ignore next */_frontEndConstants.VALID_SKU && processedSkuResponse.keys) {
      var key = processedSkuResponse.keys[0]; //not generic need to change in version 2 of pdfa
      var dropdownDataField = { value: "" },dropdownData = [];
      var skuAttributes = this.props.skuAttributes.audit_attributes_values[key];
      for (var i = skuAttributes.length - 1; i >= 0; i--) {
        dropdownDataField.value = skuAttributes[i];
        dropdownData.push(dropdownDataField);
        dropdownDataField = { value: "" };
      }
      return dropdownData;
    }
  }
  _captureQuery(e) {
    if (e.target.value) {
      var emptyList = [];
      this.setState({ currentSku: e.target.value, selected: emptyList });
    }
  }

  render()
  {
    let validSkuMessg = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.valid.sku', description: 'text for valid sku', defaultMessage: 'SKU confirmed', __source: { fileName: _jsxFileName, lineNumber: 187 }, __self: this });
    let invalidSkuMessg = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.invalid.sku', description: 'text for invalid sku', defaultMessage: 'Please enter correct SKU number', __source: { fileName: _jsxFileName, lineNumber: 188 }, __self: this });
    let validSkuNoAtriMessg = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.noAtrributes.sku', description: 'text for valid sku with no attributed', defaultMessage: 'SKU confirmed but no Box Id found', __source: { fileName: _jsxFileName, lineNumber: 189 }, __self: this });
    var processedSkuResponse = this._processSkuAttributes();
    var skuState = this._claculateSkuState(processedSkuResponse);
    var dropdownData = this._searchDropdownEntries(skuState, processedSkuResponse);
    var confirmedSkuNotChanged = this.state.confirmedSku === this.state.currentSku ? true : false;

    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 196 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-modal-content', __source: { fileName: _jsxFileName, lineNumber: 197 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-modal-head', __source: { fileName: _jsxFileName, lineNumber: 198 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-add', __source: { fileName: _jsxFileName, lineNumber: 199 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.add.heading', description: 'Heading for add audit',
                defaultMessage: 'Create new audit task', __source: { fileName: _jsxFileName, lineNumber: 199 }, __self: this }),
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-sub-head', __source: { fileName: _jsxFileName, lineNumber: 201 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.add.subheading', description: 'Subheading for add audit',
                  defaultMessage: 'Select and enter details below to create a new audit task', __source: { fileName: _jsxFileName, lineNumber: 201 }, __self: this }))),

            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'close', onClick: this._removeThisModal.bind(this), __source: { fileName: _jsxFileName, lineNumber: 204 }, __self: this }, /* istanbul ignore next */'\xD7')),

          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-modal-body', __source: { fileName: _jsxFileName, lineNumber: 206 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'form', /* istanbul ignore next */{ action: '#', id: 'createauditForm', ref: node => {this.addauditForm = node;},
                onSubmit: e => this._handleAddaudit(e), __source: { fileName: _jsxFileName, lineNumber: 207 }, __self: this },

              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-form', __source: { fileName: _jsxFileName, lineNumber: 210 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-details', __source: { fileName: _jsxFileName, lineNumber: 211 }, __self: this },
                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdlg', __source: { fileName: _jsxFileName, lineNumber: 212 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.add.auditdetails.heading', description: 'Text for audit details heading',
                      defaultMessage: 'Select audit type by', __source: { fileName: _jsxFileName, lineNumber: 212 }, __self: this })),
                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-audit-field', __source: { fileName: _jsxFileName, lineNumber: 214 }, __self: this }),



                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-role', __source: { fileName: _jsxFileName, lineNumber: 218 }, __self: this },
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ type: 'radio', name: 'role', onChange: this._checkType.bind(this), defaultChecked: /* istanbul ignore next */true, value: /* istanbul ignore next */_frontEndConstants.SKU, ref: node => {this.sku = node;}, __source: { fileName: _jsxFileName, lineNumber: 219 }, __self: this }), /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-usr-hdsm', __source: { fileName: _jsxFileName, lineNumber: 219 }, __self: this },
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.add.typedetails.sku', description: 'Text for sku',
                        defaultMessage: 'Audit by SKU code', __source: { fileName: _jsxFileName, lineNumber: 220 }, __self: this }), /* istanbul ignore next */' ')),

                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-role', __source: { fileName: _jsxFileName, lineNumber: 223 }, __self: this },
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ type: 'radio', value: /* istanbul ignore next */_frontEndConstants.LOCATION, onChange: this._checkType.bind(this), name: 'role', ref: node => {this.location = node;}, __source: { fileName: _jsxFileName, lineNumber: 224 }, __self: this }), /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-usr-hdsm', __source: { fileName: _jsxFileName, lineNumber: 224 }, __self: this },
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.add.typedetails.location', description: 'Text for location',
                        defaultMessage: 'Audit by Location code', __source: { fileName: _jsxFileName, lineNumber: 225 }, __self: this })))),




                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-details', __source: { fileName: _jsxFileName, lineNumber: 231 }, __self: this },
                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { 'display': this.props.auditType === /* istanbul ignore next */_frontEndConstants.LOCATION ? 'none' : 'block' }, __source: { fileName: _jsxFileName, lineNumber: 232 }, __self: this },
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdsm', __source: { fileName: _jsxFileName, lineNumber: 233 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.add.sku.heading', description: 'Text for SKU heading',
                        defaultMessage: 'Enter SKU code', __source: { fileName: _jsxFileName, lineNumber: 233 }, __self: this })),
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-audit-input-wrap', __source: { fileName: _jsxFileName, lineNumber: 235 }, __self: this },
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ className: "gor-audit-input" + (skuState === /* istanbul ignore next */_frontEndConstants.SKU_NOT_EXISTS ? ' gor-input-error' : ' gor-input-ok'), placeholder: 'e.g. 46978072', id: 'skuid', ref: node => {this.skuId = node;}, onChange: this._captureQuery.bind(this), __source: { fileName: _jsxFileName, lineNumber: 236 }, __self: this }),
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: skuState === /* istanbul ignore next */_frontEndConstants.SKU_NOT_EXISTS ? "gor-login-error" : (skuState === /* istanbul ignore next */_frontEndConstants.VALID_SKU || skuState === /* istanbul ignore next */_frontEndConstants.NO_ATTRIBUTE_SKU) && confirmedSkuNotChanged ? "gor-verified-icon" : "", __source: { fileName: _jsxFileName, lineNumber: 237 }, __self: this })),

                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: "gor-sku-validation-btn-wrap" + (this.props.skuValidationResponse ? " gor-disable-content" : ""), __source: { fileName: _jsxFileName, lineNumber: 239 }, __self: this },
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ className: 'gor-auditCreate-btn', type: 'button', onClick: this._validSku.bind(this), __source: { fileName: _jsxFileName, lineNumber: 240 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audits.validateSKU', description: 'Text for validate sku button',
                          defaultMessage: 'Validate', __source: { fileName: _jsxFileName, lineNumber: 240 }, __self: this }))),

                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: skuState === /* istanbul ignore next */_frontEndConstants.SKU_NOT_EXISTS ? "gor-sku-error" : "gor-sku-valid", __source: { fileName: _jsxFileName, lineNumber: 243 }, __self: this },
                      confirmedSkuNotChanged ? skuState === /* istanbul ignore next */_frontEndConstants.SKU_NOT_EXISTS ? invalidSkuMessg : skuState === /* istanbul ignore next */_frontEndConstants.VALID_SKU ? validSkuMessg : skuState === /* istanbul ignore next */_frontEndConstants.NO_ATTRIBUTE_SKU ? validSkuNoAtriMessg : "" : ""),

                    skuState === /* istanbul ignore next */_frontEndConstants.NO_ATTRIBUTE_SKU ? "" :
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: "gor-searchDropdown-audit-wrap" + (skuState !== /* istanbul ignore next */_frontEndConstants.VALID_SKU || !confirmedSkuNotChanged ? " gor-disable-content" : ""), __source: { fileName: _jsxFileName, lineNumber: 247 }, __self: this },
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdsm', __source: { fileName: _jsxFileName, lineNumber: 248 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.dropdown.heading', description: 'Text for dropdown heading',
                          defaultMessage: 'Choose Box Id (Optional)', __source: { fileName: _jsxFileName, lineNumber: 248 }, __self: this })),
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_searchDropdown2.default, /* istanbul ignore next */{ list: dropdownData, selectedItems: this._selectedAttributes.bind(this), __source: { fileName: _jsxFileName, lineNumber: 250 }, __self: this }))),



                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { 'display': this.props.auditType === /* istanbul ignore next */_frontEndConstants.LOCATION ? 'block' : 'none' }, __source: { fileName: _jsxFileName, lineNumber: 254 }, __self: this },
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-hdsm', __source: { fileName: _jsxFileName, lineNumber: 255 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.add.location.heading', description: 'Text for location heading',
                        defaultMessage: 'Enter Location', __source: { fileName: _jsxFileName, lineNumber: 255 }, __self: this })),
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-sub-head', __source: { fileName: _jsxFileName, lineNumber: 257 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.add.location.subheading', description: 'Subtext for enter location',
                        defaultMessage: 'Format: (XXX.X.X.XX)', __source: { fileName: _jsxFileName, lineNumber: 257 }, __self: this })),
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ className: "gor-audit-fdlg" + (this.props.locCheck.type === /* istanbul ignore next */_frontEndConstants.ERROR ? ' gor-input-error' : ' gor-input-ok'), placeholder: 'e.g. 132.0.A.47', id: 'locationid', ref: node => {this.locationId = node;}, __source: { fileName: _jsxFileName, lineNumber: 259 }, __self: this }),
                    this.props.locCheck.type === /* istanbul ignore next */_frontEndConstants.ERROR ? /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_fielderror2.default, /* istanbul ignore next */{ txt: this.props.locCheck.msg, __source: { fileName: _jsxFileName, lineNumber: 260 }, __self: this }) : '')),


                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ className: 'gor-submit', __source: { fileName: _jsxFileName, lineNumber: 263 }, __self: this },
                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ className: "gor-add-btn" + (processedSkuResponse.isValid && confirmedSkuNotChanged || this.props.auditType === /* istanbul ignore next */_frontEndConstants.LOCATION ? "" : " gor-disable-content"), __source: { fileName: _jsxFileName, lineNumber: 264 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audits.add.password.button', description: 'Text for add audit button',
                      defaultMessage: 'Create audit', __source: { fileName: _jsxFileName, lineNumber: 264 }, __self: this })))))))));







  }}


function mapStateToProps(state, ownProps) {
  return {
    skuValidationResponse: state.auditInfo.skuValidationSpinner || false,
    auditType: state.auditInfo.auditType || {},
    skuCheck: state.appInfo.skuInfo || {},
    locCheck: state.appInfo.locInfo || {},
    auth_token: state.authLogin.auth_token,
    skuAttributes: state.auditInfo.skuAttributes };

}

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    userRequest: function /* istanbul ignore next */userRequest(data) {dispatch( /* istanbul ignore next */(0, _userActions.userRequest)(data));},
    setAuditType: function /* istanbul ignore next */setAuditType(data) {dispatch( /* istanbul ignore next */(0, _auditActions.setAuditType)(data));},
    resetAuditType: function /* istanbul ignore next */resetAuditType(data) {dispatch( /* istanbul ignore next */(0, _auditActions.resetAuditType)(data));},
    validateSKU: function /* istanbul ignore next */validateSKU(data) {dispatch( /* istanbul ignore next */(0, _validationActions.validateSKU)(data));},
    validateLoc: function /* istanbul ignore next */validateLoc(data) {dispatch( /* istanbul ignore next */(0, _validationActions.validateLOC)(data));},
    resetForm: function /* istanbul ignore next */resetForm() {dispatch( /* istanbul ignore next */(0, _validationActions.resetForm)());},
    validateSKUcode: function /* istanbul ignore next */validateSKUcode(data) {dispatch( /* istanbul ignore next */(0, _validationActions.validateSKUcode)(data));},
    validateSKUcodeSpinner: function /* istanbul ignore next */validateSKUcodeSpinner(data) {dispatch( /* istanbul ignore next */(0, _validationActions.validateSKUcodeSpinner)(data));},
    auditValidatedAttributes: function /* istanbul ignore next */auditValidatedAttributes(data) {dispatch( /* istanbul ignore next */(0, _auditActions.auditValidatedAttributes)(data));} };

}; /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(CreateAudit);