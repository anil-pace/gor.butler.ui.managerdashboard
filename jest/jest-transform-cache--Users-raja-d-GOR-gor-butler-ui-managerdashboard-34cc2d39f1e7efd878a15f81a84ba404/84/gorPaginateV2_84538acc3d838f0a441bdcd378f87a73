/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/gorPaginate/gorPaginateV2.js'; /**
                                                                                                                                                                                                                         * Created by gaurav.m on 4/26/17.
                                                                                                                                                                                                                         */
var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_reactRouter = require('react-router'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}


class GorPaginateV2 extends /* istanbul ignore next */_react2.default.Component {

    constructor(props) {
        super(props);
        let current_query = props.location.query,currentPage = 1;

        if (current_query.page) {
            currentPage = +current_query.page;
        }
        this.state = { currentPage: currentPage, totalPage: props.totalPage, currentQuery: currentPage };
        this.submit = this.submit.bind(this);
        this._textSubmit = this._textSubmit.bind(this);
    }

    componentWillReceiveProps(nextProps) {
        let current_query = nextProps.location.query,currentPage = 1;

        if (current_query.page) {
            currentPage = +current_query.page;
        }
        this.setState({ totalPage: nextProps.totalPage, currentPage: currentPage, currentQuery: currentPage });
    }

    _textSubmit(e) {
        this.setState({ currentQuery: this.pageNum.value });
    }

    submit(e) {
        e.preventDefault();
        var regex = /^\d+$/; // used for validation of numeric key by user
        if (regex.test(this.pageNum.value) && +this.pageNum.value > 0 && +this.pageNum.value <= this.state.totalPage) {
            this._navigateToPage(+this.pageNum.value);

        } else {
            //Do nothing
            this.setState({ currentQuery: this.state.currentPage });
        }
    }

    _navigateToPage(page) {
        let _query = this.props.location.query || {};
        _query.page = page.toString();

        this.setState({ currentQuery: page });
        /* istanbul ignore next */_reactRouter.hashHistory.push({ pathname: this.props.location.pathname, query: _query });

    }


    render() {
        var paginateButton = { firstPg: "|<", lastPg: ">|", prevPg: "<", nextPg: ">" };
        var currentPage = +this.state.currentQuery;
        var totalPage = +this.state.totalPage;
        var disabled = this.props.disabled;
        return (
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 64 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-paginate-wrap', __source: { fileName: _jsxFileName, lineNumber: 65 }, __self: this },
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'form', /* istanbul ignore next */{ onSubmit: !disabled ? this.submit : null, __source: { fileName: _jsxFileName, lineNumber: 66 }, __self: this },
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-paginate-input-box-wrap', __source: { fileName: _jsxFileName, lineNumber: 67 }, __self: this },
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-paginate-text-wrap', __source: { fileName: _jsxFileName, lineNumber: 68 }, __self: this },
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'paginate.page.heading', description: 'Heading for paginate page',
                                    defaultMessage: 'Page', __source: { fileName: _jsxFileName, lineNumber: 69 }, __self: this })),

                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ disabled: disabled, className: 'gor-paginate-input-box', type: 'text', value: currentPage,
                                onChange: !disabled ? this._textSubmit : null, ref: node => {
                                    this.pageNum = node;
                                }, __source: { fileName: _jsxFileName, lineNumber: 72 }, __self: this }),
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-paginate-text-wrap', __source: { fileName: _jsxFileName, lineNumber: 76 }, __self: this },
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'paginate.page.pageNum', description: 'Heading for paginate pageNum',
                                    defaultMessage: 'of {totalPage}', values: { totalPage: totalPage }, __source: { fileName: _jsxFileName, lineNumber: 77 }, __self: this }))),


                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-button-wrap', __source: { fileName: _jsxFileName, lineNumber: 81 }, __self: this },
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{
                                    className: currentPage === 1 ? "gor-paginate-left-btn gor-paginate-btn-disable" : "gor-paginate-left-btn",
                                    onClick: currentPage !== 1 && !disabled ? this._navigateToPage.bind(this, 1) : null, __source: { fileName: _jsxFileName, lineNumber: 82 }, __self: this },
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-pagination-first', __source: { fileName: _jsxFileName, lineNumber: 85 }, __self: this })),

                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{
                                    className: currentPage === 1 ? "gor-paginate-middle-left-btn gor-paginate-btn-disable" : "gor-paginate-middle-left-btn",
                                    onClick: currentPage !== 1 && !disabled ? this._navigateToPage.bind(this, currentPage - 1) : null, __source: { fileName: _jsxFileName, lineNumber: 87 }, __self: this },
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-pagination-previous', __source: { fileName: _jsxFileName, lineNumber: 90 }, __self: this })),

                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{
                                    className: currentPage === totalPage ? "gor-paginate-middle-right-btn gor-paginate-btn-disable" : "gor-paginate-middle-right-btn",
                                    onClick: currentPage !== totalPage && !disabled ? this._navigateToPage.bind(this, currentPage + 1) : null, __source: { fileName: _jsxFileName, lineNumber: 92 }, __self: this },
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-pagination-next', __source: { fileName: _jsxFileName, lineNumber: 95 }, __self: this })),

                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{
                                    className: currentPage === totalPage ? "gor-paginate-right-btn gor-paginate-btn-disable" : "gor-paginate-right-btn",
                                    onClick: currentPage !== totalPage && !disabled ? this._navigateToPage.bind(this, totalPage) : null, __source: { fileName: _jsxFileName, lineNumber: 97 }, __self: this },
                                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-pagination-last', __source: { fileName: _jsxFileName, lineNumber: 100 }, __self: this })))))));






    }}

GorPaginateV2.defaultProps = {
    disabled: false }; /* istanbul ignore next */exports.default =


GorPaginateV2;