/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/gorPaginate/gorPaginate.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactIntl = require('react-intl'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}


class GorPaginate extends /* istanbul ignore next */_react2.default.Component {

  constructor(props)
  {
    super(props);
    var totalPage = this.props.totalPage;
    this.state = { currentPage: 1, totalPage: totalPage, currentQuery: 1 };
  }

  componentWillReceiveProps(nextProps) {
    var totalPage = nextProps.totalPage; // for async call response come with some delay so updating total page here
    this.setState({ totalPage: totalPage });
  }

  submit(e) {
    e.preventDefault();
    var regex = /^\d+$/; // used for validation of numeric key by user 
    var data = { selected: this.state.currentPage };
    if (regex.test(this.pageNum.value)) {
      data = { selected: this.pageNum.value };
      if (data.selected >= this.state.totalPage) {
        data.selected = this.state.totalPage;
      }

      if (data.selected <= 0) {
        data.selected = 1;
      }

      this.setState({ currentPage: data.selected, currentQuery: data.selected });
      this.props.getPageDetail(data);
    } else
    {
      this.props.getPageDetail(data);
      this.setState({ currentQuery: data.selected });
    }
  }

  _textSubmit(e) {
    this.setState({ currentQuery: this.pageNum.value });
  }

  _incPage() {
    var currentPage = this.state.currentPage;
    currentPage++;
    this.setState({ currentPage: currentPage, currentQuery: currentPage });
    var data = { selected: currentPage };
    this.props.getPageDetail(data);
  }

  _decPage() {
    var currentPage = this.state.currentPage;
    currentPage--;
    this.setState({ currentPage: currentPage, currentQuery: currentPage });
    var data = { selected: currentPage };
    this.props.getPageDetail(data);
  }

  _firstPage() {
    var data = { selected: 1 };
    this.setState({ currentPage: 1, currentQuery: 1 });
    this.props.getPageDetail(data);
  }

  _lastPage() {
    var lastPage = this.state.totalPage;
    var data = { selected: lastPage };
    this.setState({ currentPage: lastPage, currentQuery: lastPage });
    this.props.getPageDetail(data);
  }


  render() {
    var paginateButton = { firstPg: "|<", lastPg: ">|", prevPg: "<", nextPg: ">" };
    var currentPage = this.state.currentQuery;
    var totalPage = this.state.totalPage;
    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 81 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-paginate-wrap', __source: { fileName: _jsxFileName, lineNumber: 82 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'form', /* istanbul ignore next */{ onSubmit: this.submit.bind(this), __source: { fileName: _jsxFileName, lineNumber: 83 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-paginate-input-box-wrap', __source: { fileName: _jsxFileName, lineNumber: 84 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-paginate-text-wrap', __source: { fileName: _jsxFileName, lineNumber: 85 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'paginate.page.heading', description: 'Heading for paginate page', defaultMessage: 'Page', __source: { fileName: _jsxFileName, lineNumber: 86 }, __self: this })),

              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ className: 'gor-paginate-input-box', type: 'text', value: currentPage, onChange: this._textSubmit.bind(this), ref: node => {this.pageNum = node;}, __source: { fileName: _jsxFileName, lineNumber: 88 }, __self: this }),
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-paginate-text-wrap', __source: { fileName: _jsxFileName, lineNumber: 89 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'paginate.page.pageNum', description: 'Heading for paginate pageNum', defaultMessage: 'of {totalPage}', values: { totalPage: totalPage }, __source: { fileName: _jsxFileName, lineNumber: 90 }, __self: this }))),


            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-button-wrap', __source: { fileName: _jsxFileName, lineNumber: 93 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: currentPage <= 1 ? "gor-paginate-left-btn gor-paginate-btn-disable" : "gor-paginate-left-btn", onClick: this._firstPage.bind(this), __source: { fileName: _jsxFileName, lineNumber: 94 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-pagination-first', __source: { fileName: _jsxFileName, lineNumber: 95 }, __self: this })),

              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: currentPage <= 1 ? "gor-paginate-middle-left-btn gor-paginate-btn-disable" : "gor-paginate-middle-left-btn", onClick: this._decPage.bind(this), __source: { fileName: _jsxFileName, lineNumber: 97 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-pagination-previous', __source: { fileName: _jsxFileName, lineNumber: 98 }, __self: this })),

              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: currentPage >= totalPage ? "gor-paginate-middle-right-btn gor-paginate-btn-disable" : "gor-paginate-middle-right-btn", onClick: this._incPage.bind(this), __source: { fileName: _jsxFileName, lineNumber: 100 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-pagination-next', __source: { fileName: _jsxFileName, lineNumber: 101 }, __self: this })),

              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: currentPage >= totalPage ? "gor-paginate-right-btn gor-paginate-btn-disable" : "gor-paginate-right-btn", onClick: this._lastPage.bind(this), __source: { fileName: _jsxFileName, lineNumber: 103 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-pagination-last', __source: { fileName: _jsxFileName, lineNumber: 104 }, __self: this })))))));






  }}
; /* istanbul ignore next */exports.default =


GorPaginate;