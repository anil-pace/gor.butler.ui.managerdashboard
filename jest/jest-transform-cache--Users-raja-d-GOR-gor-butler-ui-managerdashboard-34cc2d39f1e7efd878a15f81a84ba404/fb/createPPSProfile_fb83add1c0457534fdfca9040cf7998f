/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/containers/systemTabs/createPPSProfile.js'; /**
                                                                                                                                                                                                                           * Created by gaurav.m on 7/14/17.
                                                                                                                                                                                                                           */
var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_ppsConfigurationActions = require('./../../actions/ppsConfigurationActions');
var /* istanbul ignore next */_configConstants = require('./../../constants/configConstants');
var /* istanbul ignore next */_frontEndConstants = require('./../../constants/frontEndConstants');
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_ajaxActions = require('./../../actions/ajaxActions'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}
class CreateProfile extends /* istanbul ignore next */_react2.default.Component {
    constructor(props) {
        super(props);
        this.state = { profileName: '' };
    }

    handleChangeInProfileName(e) {
        if (e.target) {
            this.setState({ profileName: e.target.value || "" });
            if (!e.target.value || this.props.selectedPPS.pps_profiles.filter(function (profile) {
                return profile.profile_name === e.target.value;
            }).length > 0) {
                /**
                             * Only unique profile names will be
                             * allowed to enter.
                             */
                this.setState({ isValidProfileName: false });
            } else {
                this.setState({ isValidProfileName: true });
            }
        }

    }

    componentWillReceiveProps(nextProps) {
        if (nextProps.profileCreatedAt !== this.props.profileCreatedAt) {
            this.props.removeModal();
        }
    }

    createNewPPSProfile() {
        /**
                            * API to create new profile
                            */
        let form_data = JSON.parse(JSON.stringify(this.props.selectedProfile));
        form_data.profile_name = this.state.profileName;
        /**
                                                          * While creating a new profile
                                                          * we don't need applied and
                                                          * requested properties, so deleting it.
                                                          */
        delete form_data.applied;
        delete form_data.requested;
        let url = /* istanbul ignore next */_configConstants.SAVE_PROFILE_URL + this.props.selectedPPS.pps_id;
        let data = {
            'url': url,
            'formdata': form_data,
            'method': /* istanbul ignore next */_frontEndConstants.POST,
            'cause': /* istanbul ignore next */_frontEndConstants.CREATE_NEW_PROFILE,
            'contentType': /* istanbul ignore next */_frontEndConstants.APP_JSON,
            'accept': /* istanbul ignore next */_frontEndConstants.APP_JSON,
            'token': this.props.auth_token };

        this.props.makeAjaxCall(data);
    }

    render() {
        return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 68 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-create-profile', __source: { fileName: _jsxFileName, lineNumber: 69 }, __self: this },
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-create-profile-header', __source: { fileName: _jsxFileName, lineNumber: 70 }, __self: this },
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-question gor-align-middle', __source: { fileName: _jsxFileName, lineNumber: 71 }, __self: this }),
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 72 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.configuration.create.profile.header',
                                description: 'Save a new profile',
                                defaultMessage: 'Save a new profile', __source: { fileName: _jsxFileName, lineNumber: 72 }, __self: this }))),

                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-create-profile-body', __source: { fileName: _jsxFileName, lineNumber: 76 }, __self: this },
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ style: { display: 'table-cell', verticalAlign: 'middle' }, __source: { fileName: _jsxFileName, lineNumber: 77 }, __self: this },
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-filter-input-text', __source: { fileName: _jsxFileName, lineNumber: 78 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.configuration.create.profile.name.label',
                                    description: 'New Profile Name',
                                    defaultMessage: 'New Profile Name', __source: { fileName: _jsxFileName, lineNumber: 78 }, __self: this })),
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ onChange: this.handleChangeInProfileName.bind(this), value: this.state.profileName, id: 'create-profile-name', name: 'create-profile-name', className: 'gor-filter-input-wrap', type: 'text', __source: { fileName: _jsxFileName, lineNumber: 81 }, __self: this }))),


                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-create-profile-action-button', __source: { fileName: _jsxFileName, lineNumber: 84 }, __self: this },
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ className: 'gor-cancel-btn', onClick: this.props.removeModal.bind(this), __source: { fileName: _jsxFileName, lineNumber: 85 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.configuration.create.profile.cancel',
                                description: 'Cancel',
                                defaultMessage: 'Cancel', __source: { fileName: _jsxFileName, lineNumber: 85 }, __self: this })),
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ disabled: !this.state.isValidProfileName, onClick: this.createNewPPSProfile.bind(this), className: 'gor-save-profile-btn', __source: { fileName: _jsxFileName, lineNumber: 88 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.configuration.create.profile.button.text',
                                description: 'Save A New Profile',
                                defaultMessage: 'Save A New Profile', __source: { fileName: _jsxFileName, lineNumber: 88 }, __self: this }))))));



    }}



function mapStateToProps(state, ownProps) {

    return {
        selectedProfile: state.ppsConfiguration.selectedProfile,
        auth_token: state.authLogin.auth_token,
        profileCreatedAt: state.ppsConfiguration.profileCreatedAt || new Date().getTime(),
        selectedPPS: state.ppsConfiguration.selectedPPS };

}
var mapDispatchToProps = function mapDispatchToProps(dispatch) {
    return {
        makeAjaxCall: function /* istanbul ignore next */makeAjaxCall(data) {
            dispatch( /* istanbul ignore next */(0, _ajaxActions.makeAjaxCall)(data));
        },
        cancelProfileChanges: function /* istanbul ignore next */cancelProfileChanges(data) {
            dispatch( /* istanbul ignore next */(0, _ppsConfigurationActions.cancelProfileChanges)(data));
        } };

}; /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(CreateProfile);