/* istanbul ignore next */"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.





sortHeaderState = sortHeaderState;var /* istanbul ignore next */_frontEndConstants = require("../constants/frontEndConstants");function sortHeaderState(state = {}, action) {
					switch (action.type) {

										case /* istanbul ignore next */_frontEndConstants.BUTLER_HEADER_SORT:
															return Object.assign({}, state, {
																				"butlerHeaderSort": action.data });


										case /* istanbul ignore next */_frontEndConstants.BUTLER_HEADER_SORT_ORDER:
															return Object.assign({}, state, {
																				"butlerHeaderSortOrder": action.data });


										case /* istanbul ignore next */_frontEndConstants.PPS_CHECKED:
															return Object.assign({}, state, {
																				"checkedPps": action.data });

										case /* istanbul ignore next */_frontEndConstants.RESET_CHECKED_PPS:
															let checkedPps = JSON.parse(JSON.stringify(state.checkedPps));
															let successFulPPS = action.data;
															for (let i = 0, len = successFulPPS.length; i < len; i++) {
																				delete checkedPps[successFulPPS[i]];
															}
															return Object.assign({}, state, {
																				"checkedPps": checkedPps,
																				"renderDropD": Object.keys(checkedPps).length ? true : false });


										case /* istanbul ignore next */_frontEndConstants.PPS_HEADER_SORT:
															return Object.assign({}, state, {
																				"ppsHeaderSort": action.data });


										case /* istanbul ignore next */_frontEndConstants.PPS_HEADER_SORT_ORDER:
															return Object.assign({}, state, {
																				"ppsHeaderSortOrder": action.data });


										case /* istanbul ignore next */_frontEndConstants.DROP_RENDER_DISPLAY:
															return Object.assign({}, state, {
																				"renderDropD": action.data });


										case /* istanbul ignore next */_frontEndConstants.SET_CHECK_ALL:
															return Object.assign({}, state, {
																				"checkAll": action.data });


										case /* istanbul ignore next */_frontEndConstants.USER_HEADER_SORT:
															return Object.assign({}, state, {
																				"userHeaderSort": action.data });


										case /* istanbul ignore next */_frontEndConstants.USER_HEADER_SORT_ORDER:
															return Object.assign({}, state, {
																				"userHeaderSortOrder": action.data });


										case /* istanbul ignore next */_frontEndConstants.WAVE_HEADER_SORT:
															return Object.assign({}, state, {
																				"waveHeaderSort": action.data });


										case /* istanbul ignore next */_frontEndConstants.WAVE_HEADER_SORT_ORDER:
															return Object.assign({}, state, {
																				"waveHeaderSortOrder": action.data });


										case /* istanbul ignore next */_frontEndConstants.CS_HEADER_SORT:
															return Object.assign({}, state, {
																				"csHeaderSort": action.data });


										case /* istanbul ignore next */_frontEndConstants.CS_HEADER_SORT_ORDER:
															return Object.assign({}, state, {
																				"csHeaderSortOrder": action.data });


										case /* istanbul ignore next */_frontEndConstants.SET_USER_FILTER:
															return Object.assign({}, state, {
																				"userFilter": action.data });


										case /* istanbul ignore next */_frontEndConstants.ORDER_HEADER_SORT:
															return Object.assign({}, state, {
																				"orderHeaderSort": action.data });


										case /* istanbul ignore next */_frontEndConstants.ORDER_HEADER_SORT_ORDER:
															return Object.assign({}, state, {
																				"orderHeaderSortOrder": action.data });


										case /* istanbul ignore next */_frontEndConstants.SET_ORDER_FILTER:
															return Object.assign({}, state, {
																				"orderFilter": action.data });


										case /* istanbul ignore next */_frontEndConstants.AUDIT_HEADER_SORT:
															return Object.assign({}, state, {
																				"auditHeaderSort": action.data });


										case /* istanbul ignore next */_frontEndConstants.AUDIT_HEADER_SORT_ORDER:
															return Object.assign({}, state, {
																				"auditHeaderSortOrder": action.data });


										case /* istanbul ignore next */_frontEndConstants.SET_AUDIT_FILTER:
															return Object.assign({}, state, {
																				"auditFilter": action.data });


										case /* istanbul ignore next */_frontEndConstants.SET_BUTLER_FILTER:
															return Object.assign({}, state, {
																				"butlerFilter": action.data });


										case /* istanbul ignore next */_frontEndConstants.SET_PPS_FILTER:
															return Object.assign({}, state, {
																				"ppsFilter": action.data });


										case /* istanbul ignore next */_frontEndConstants.SET_CS_FILTER:
															return Object.assign({}, state, {
																				"csFilter": action.data });


										case /* istanbul ignore next */_frontEndConstants.SET_WAVE_FILTER:
															return Object.assign({}, state, {
																				"waveFilter": action.data });


										default:
															return state;}

}