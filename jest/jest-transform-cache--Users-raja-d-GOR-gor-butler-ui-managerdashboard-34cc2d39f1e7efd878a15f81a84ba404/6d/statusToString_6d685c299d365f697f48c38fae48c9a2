/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/utilities/statusToString.js';exports.




statusToString = statusToString;var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);var /* istanbul ignore next */_reactIntl = require('react-intl');var /* istanbul ignore next */_frontEndConstants = require('../constants/frontEndConstants');var /* istanbul ignore next */_messageConstants = require('../constants/messageConstants'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function statusToString(res) {
  var stringInfo, auditType, auditTypeValue, auditId;
  switch (res.status) {

    case /* istanbul ignore next */_frontEndConstants.AUDIT_RESOLVED:
      auditId = res.audit_display_id;
      auditType = res.audit_type;
      auditTypeValue = res.audit_type_value;
      if (auditType === /* istanbul ignore next */_frontEndConstants.AUDIT_BY_PDFA) {
        auditType = "SKU";
        auditTypeValue = res.audit_type_value.product_sku;
      }
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.SUCCESS,
        msg: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.resolve.success', description: 'Text for resolved audit lines',
          defaultMessage: 'Audit task {auditId} with {auditType} - {auditTypeValue} has been approved',
          values: { auditId: res.audit_display_id, auditType: res.audit_type, auditTypeValue: res.audit_type_value }, __source: { fileName: _jsxFileName, lineNumber: 20 }, __self: this }) };


      break;

    case /* istanbul ignore next */_frontEndConstants.AUDIT_LINE_REJECTED:
      auditId = res.audit_display_id;
      auditType = res.audit_type;
      auditTypeValue = res.audit_type_value;
      if (auditType === /* istanbul ignore next */_frontEndConstants.AUDIT_BY_PDFA) {
        auditType = "SKU";
        auditTypeValue = res.audit_type_value.product_sku;
      }
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.SUCCESS,
        msg: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'audit.resolve.rejected', description: 'Text for rejected audit lines',
          defaultMessage: 'Audit task {auditId} with {auditType} - {auditTypeValue} has been rejected',
          values: { auditId: res.audit_display_id, auditType: res.audit_type, auditTypeValue: res.audit_type_value }, __source: { fileName: _jsxFileName, lineNumber: 37 }, __self: this }) };


      break;

    case /* istanbul ignore next */_frontEndConstants.ITEM_RECALLED_DATA:
      var itemCount = res.item_count ? res.item_count : 0;
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.SUCCESS,
        msg: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'utility.item.recall', description: 'Item recall message',
          defaultMessage: '{itemCount} expired items recalled',
          values: { itemCount: itemCount ? itemCount : "0" }, __source: { fileName: _jsxFileName, lineNumber: 48 }, __self: this }) };


      break;

    default:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.ERR_RES };}


  return stringInfo;
}