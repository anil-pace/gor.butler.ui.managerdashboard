/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/utilities/codeToString.js';exports.






codeToString = codeToString;var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);var /* istanbul ignore next */_reactIntl = require('react-intl');var /* istanbul ignore next */_frontEndConstants = require('../constants/frontEndConstants');var /* istanbul ignore next */_backEndConstants = require('../constants/backEndConstants');var /* istanbul ignore next */_messageConstants = require('../constants/messageConstants'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function codeToString(res) {
  let stringInfo;
  switch (res.code) {

    case /* istanbul ignore next */_backEndConstants.CODE_US001:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.SUCCESS,
        msg: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.success.add', description: 'Text for successfull user addition',
          defaultMessage: 'New user "{first} {last}" added successfully', values: { first: res.details[0] || "--", last: res.details[1] || "--" }, __source: { fileName: _jsxFileName, lineNumber: 15 }, __self: this }) //Make string for addition
      };
      break;
    case /* istanbul ignore next */_backEndConstants.CODE_US002:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.SUCCESS,
        msg: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.success.delete', description: 'Text for successfull user deletion',
          defaultMessage: 'User "{first} {last}" deleted successfully', values: { first: res.details[0] || "--", last: res.details[1] || "--" }, __source: { fileName: _jsxFileName, lineNumber: 22 }, __self: this }) //Make string for deletion
      };
      break;
    case /* istanbul ignore next */_backEndConstants.CODE_US004:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.SUCCESS,
        msg: /* istanbul ignore next */_messageConstants.US004 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_AS002:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.SUCCESS,
        msg: /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'notify.delete.audit.success', description: 'Text for successfull audit deletion',
          defaultMessage: 'Audit task {audit_id} has been deleted', values: { audit_id: res.details["display_id"] || "--" }, __source: { fileName: _jsxFileName, lineNumber: 35 }, __self: this }) };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_UE001:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.UE001 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_UE002:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.UE002 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_UE003:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.UE003 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_UE004:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.UE004 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_UE005:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.UE005 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_UE006:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.UE006 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_AS003:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.AS003 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_G016:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.G016 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_AE001:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.AE001 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_AE002:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.AE002 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_AE004:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.AE004 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_AE005:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.AE005 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_AE006:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.AE006 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_E026:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.E026 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_E027:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.E027 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_AE008:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.SUCCESS,
        msg: /* istanbul ignore next */_messageConstants.AE008 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_AE007:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.SUCCESS,
        msg: /* istanbul ignore next */_messageConstants.AE007 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_E051:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.E051 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_E052:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.E052 };

      break;
    case /* istanbul ignore next */_backEndConstants.CODE_E135:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.E135 };

      break;


    default:
      stringInfo = {
        type: /* istanbul ignore next */_frontEndConstants.ERROR,
        msg: /* istanbul ignore next */_messageConstants.ERR_RES };}


  return stringInfo;
}