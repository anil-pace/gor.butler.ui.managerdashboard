/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/utilities/getFormattedMessages.js';exports.



getFormattedMessages = getFormattedMessages;var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);var /* istanbul ignore next */_reactIntl = require('react-intl'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function getFormattedMessages(action, values) {
																																let retValue = null;


																																switch (action) {
																																																																case "mode":
																																																																																																if (values.unsuccessful) {
																																																																																																																																return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.mode.reject', description: 'PPS mode change reject',
																																																																																																																																																																																																defaultMessage: '{unsuccessful}/{totalCount} mode change request rejected', values: values, __source: { fileName: _jsxFileName, lineNumber: 12 }, __self: this }));
																																																																																																} else
																																																																																																{
																																																																																																																																return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.mode.success', description: 'PPS mode change success',
																																																																																																																																																																																																defaultMessage: 'Mode change request successful', __source: { fileName: _jsxFileName, lineNumber: 16 }, __self: this }));
																																																																																																}
																																																																case "status":
																																																																																																if (values.unsuccessful) {
																																																																																																																																return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.status.reject', description: 'PPS status change reject',
																																																																																																																																																																																																defaultMessage: '{unsuccessful}/{totalCount} status change request rejected', values: values, __source: { fileName: _jsxFileName, lineNumber: 21 }, __self: this }));
																																																																																																} else
																																																																																																{
																																																																																																																																return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'pps.status.success', description: 'PPS status change success',
																																																																																																																																																																																																defaultMessage: 'Status change request successfull', __source: { fileName: _jsxFileName, lineNumber: 25 }, __self: this }));
																																																																																																}

																																																																case "grnGenerated":
																																																																																																return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'utility.downloadGRN.generateSuccess', description: 'GRN Request submitted successfully',
																																																																																																																																																																defaultMessage: 'GRN Request submitted successfully', __source: { fileName: _jsxFileName, lineNumber: 30 }, __self: this }));
																																																																case "invntryRptGenerated":
																																																																																																return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'utility.downloadInventory.generateSuccess', description: 'Inventory Report Request submitted successfully',
																																																																																																																																																																defaultMessage: 'Inventory Report Request submitted successfully', __source: { fileName: _jsxFileName, lineNumber: 33 }, __self: this }));
																																																																case "grnRefreshed":
																																																																																																return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'utility.downloadGRN.refreshed', description: 'GRN History Refreshed!',
																																																																																																																																																																defaultMessage: 'GRN History Refreshed!', __source: { fileName: _jsxFileName, lineNumber: 36 }, __self: this }));
																																																																case "reprtsRefreshed":
																																																																																																return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'utility.downloadReprt.refreshed', description: 'Reports History Refreshed!',
																																																																																																																																																																defaultMessage: 'Reports History Refreshed!', __source: { fileName: _jsxFileName, lineNumber: 39 }, __self: this }));

																																																																default:
																																																																																																return null;}

}