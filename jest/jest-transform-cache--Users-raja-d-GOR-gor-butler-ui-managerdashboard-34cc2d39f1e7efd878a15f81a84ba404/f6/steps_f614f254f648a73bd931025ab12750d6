/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/rangeSlider/common/steps.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_classnames = require('classnames'); /* istanbul ignore next */var _classnames2 = _interopRequireDefault(_classnames);
var /* istanbul ignore next */_warning = require('warning'); /* istanbul ignore next */var _warning2 = _interopRequireDefault(_warning);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

const calcPoints = (vertical, marks, dots, step, min, max) => {
  /* istanbul ignore next */(0, _warning2.default)(
  dots ? step > 0 : true,
  '`Slider[step]` should be a positive number in order to make Slider[dots] work.');

  const points = Object.keys(marks).map(parseFloat);
  if (dots) {
    for (let i = min; i <= max; i += step) {
      if (points.indexOf(i) >= 0) continue;
      points.push(i);
    }
  }
  return points;
};

const Steps = ({ prefixCls, vertical, marks, dots, step, included,
  lowerBound, upperBound, max, min }) => {
  const range = max - min;
  const elements = calcPoints(vertical, marks, dots, step, min, max).map(point => {
    const offset = `${Math.abs(point - min) / range * 100}%`;
    const style = vertical ? { bottom: offset } : { left: offset };

    const isActived = !included && point === upperBound ||
    included && point <= upperBound && point >= lowerBound;
    const pointClassName = /* istanbul ignore next */(0, _classnames2.default)({
      [`${prefixCls}-dot`]: true,
      [`${prefixCls}-dot-active`]: isActived });


    return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: pointClassName, style: style, key: point, __source: { fileName: _jsxFileName, lineNumber: 34 }, __self: undefined }));
  });

  return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: `${prefixCls}-step`, __source: { fileName: _jsxFileName, lineNumber: 37 }, __self: undefined }, elements));
}; /* istanbul ignore next */exports.default =

Steps;