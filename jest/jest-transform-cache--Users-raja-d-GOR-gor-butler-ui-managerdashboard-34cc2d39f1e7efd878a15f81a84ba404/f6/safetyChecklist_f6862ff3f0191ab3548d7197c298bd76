/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = '/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/containers/emergencyProcess/safetyChecklist.js';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactIntl = require('react-intl');
var /* istanbul ignore next */_validationActions = require('../../actions/validationActions');
var /* istanbul ignore next */_userActions = require('../../actions/userActions');
var /* istanbul ignore next */_spinnerAction = require('../../actions/spinnerAction');
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_frontEndConstants = require('../../constants/frontEndConstants');

var /* istanbul ignore next */_configConstants = require('../../constants/configConstants');
var /* istanbul ignore next */_backEndConstants = require('../../constants/backEndConstants');
var /* istanbul ignore next */_Spinner = require('../../components/spinner/Spinner'); /* istanbul ignore next */var _Spinner2 = _interopRequireDefault(_Spinner);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class SafetyChecklist extends /* istanbul ignore next */_react2.default.Component {
  constructor(props)
  {
    super(props);
    this.state = { allChecked: false, checkedSet: new Set(),
      safetyError: false, errorList: [] };
  }
  componentWillUnmount()
  {
    this.props.resetForm();
    this.props.validatingList(false);
  }
  _removeThisModal() {
    this.props.removeModal();
  }
  componentWillReceiveProps(nextProps) {
    if (!nextProps.breached && (!nextProps.auth_token || !nextProps.system_emergency))
    {
      if (nextProps.system_emergency || nextProps.fireHazard.emergency_type !== /* istanbul ignore next */_frontEndConstants.EMERGENCY_FIRE)
      {
        this._removeThisModal();
      }
    }
    if (nextProps.modalStatus && !this.props.modalStatus) {
      this._removeThisModal();
    }
    if (nextProps.safetyErrorList.length && this.props.safetyErrorList !== nextProps.safetyErrorList)
    {
      var errorList = nextProps.safetyErrorList,noItems;
      this.setState({ safetyError: true, errorList: errorList });
      noItems = this.props.checkList.length;
      for (let i in errorList) {
        this._toggleSelection(errorList[i], noItems);
      }
    }
  }
  componentDidMount() {
    var url;
    if (this.props.emergency_type === /* istanbul ignore next */_frontEndConstants.EMERGENCY_FIRE) {
      url = /* istanbul ignore next */_configConstants.VALIDATION_LIST + "?emergency_type=fire_emergency";
    } else

    {
      url = /* istanbul ignore next */_configConstants.VALIDATION_LIST + "?emergency_type=hard_emergency";
    }
    let userData = {
      'url': url,
      'method': /* istanbul ignore next */_frontEndConstants.GET,
      'cause': /* istanbul ignore next */_frontEndConstants.CHECK_SAFETY,
      'contentType': /* istanbul ignore next */_frontEndConstants.APP_JSON,
      'accept': /* istanbul ignore next */_frontEndConstants.APP_JSON,
      'token': this.props.auth_token };

    this.props.userRequest(userData);
    this.props.validatingList(true);
  }
  _toggleSelection(i, noItems) {
    var currentSet = this.state.checkedSet;
    if (currentSet.has(i)) {
      currentSet.delete(i);
    } else
    {
      currentSet.add(i);
    }
    this.setState({ checkedSet: currentSet });
    if (currentSet.size === noItems) {
      this.setState({ allChecked: true });
    } else
    {
      this.setState({ allChecked: false });
    }
  }
  _handleSafetyConfirm(e)
  {
    var reqType;
    if (this.props.emergency_type === /* istanbul ignore next */_frontEndConstants.EMERGENCY_FIRE) {
      reqType = /* istanbul ignore next */_frontEndConstants.EMERGENCY_FIRE;
    } else

    {
      reqType = /* istanbul ignore next */_frontEndConstants.HARD_EMERGENCY;
    }
    e.preventDefault();
    var formdata;
    formdata = { 'emergency_type': reqType };
    let userData = {
      'url': /* istanbul ignore next */_configConstants.VALIDATE_SAFETY,
      'method': /* istanbul ignore next */_frontEndConstants.POST,
      'formdata': formdata,
      'cause': /* istanbul ignore next */_frontEndConstants.CONFIRM_SAFETY,
      'contentType': /* istanbul ignore next */_frontEndConstants.APP_JSON,
      'accept': /* istanbul ignore next */_frontEndConstants.APP_JSON,
      'token': this.props.auth_token };

    this.props.userRequest(userData);
    this.props.setSafetySpinner(true);
  }
  _isValid(item, noItems) {
    var errorList = this.state.errorList,idx;
    idx = errorList.indexOf(item);
    if (idx !== -1) {
      return false;
    }
    return true;
  }
  _inList(item) {
    var currentSet = this.state.checkedSet;
    if (currentSet.has(item)) {
      return true;
    }
    return false;
  }
  _processList() {
    var checkList = [],items = this.props.checkList,noItems,item,msgCode;
    noItems = items.length;
    for (let i = 0; i < noItems; i++)
    {
      msgCode = items[i];
      if (this._inList(msgCode)) {
        item = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'li', /* istanbul ignore next */{ key: msgCode, __source: { fileName: _jsxFileName, lineNumber: 132 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ type: 'checkbox', key: msgCode, checked: true, value: msgCode, onChange: this._toggleSelection.bind(this, msgCode, noItems), __source: { fileName: _jsxFileName, lineNumber: 133 }, __self: this }),
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-checklist-item', __source: { fileName: _jsxFileName, lineNumber: 134 }, __self: this },
            this.context.intl.formatMessage( /* istanbul ignore next */_backEndConstants.stringConfig[msgCode])));



      } else
      if (this._isValid(msgCode, noItems)) {
        item = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'li', /* istanbul ignore next */{ key: msgCode, __source: { fileName: _jsxFileName, lineNumber: 141 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ type: 'checkbox', key: msgCode, value: msgCode, checked: false, onChange: this._toggleSelection.bind(this, msgCode, noItems), __source: { fileName: _jsxFileName, lineNumber: 142 }, __self: this }),
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-checklist-item', __source: { fileName: _jsxFileName, lineNumber: 143 }, __self: this },
            this.context.intl.formatMessage( /* istanbul ignore next */_backEndConstants.stringConfig[msgCode])));


      } else
      {
        item = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'li', /* istanbul ignore next */{ key: msgCode, __source: { fileName: _jsxFileName, lineNumber: 149 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'input', /* istanbul ignore next */{ type: 'checkbox', key: msgCode, checked: false, value: msgCode, onChange: this._toggleSelection.bind(this, msgCode, noItems), __source: { fileName: _jsxFileName, lineNumber: 150 }, __self: this }),
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-checklist-item', __source: { fileName: _jsxFileName, lineNumber: 151 }, __self: this },
            this.context.intl.formatMessage( /* istanbul ignore next */_backEndConstants.stringConfig[msgCode])),
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'gor-error-sm', __source: { fileName: _jsxFileName, lineNumber: 153 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safety.steperror',
              defaultMessage: '(Check again)',
              description: 'Text for error in step', __source: { fileName: _jsxFileName, lineNumber: 153 }, __self: this })));

      }
      checkList.push(item);
    }
    return checkList;
  }

  _processTableList(data) {
    var botCheckList = [],items = this.props.botList,noItems,bots,msgCode;
    var butlerDetails;
    if (data) {
      butlerDetails = data;
    }
    for (let i = 0; i < butlerDetails.length; i++) {
      bots = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-row', __source: { fileName: _jsxFileName, lineNumber: 170 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 171 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 171 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'misplaced.botId', description: 'bot id', defaultMessage: '{botid}', values: { botid: butlerDetails[i].bot_id ? butlerDetails[i].bot_id : '-' }, __source: { fileName: _jsxFileName, lineNumber: 171 }, __self: this }))),
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 172 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 172 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'misplaced.rackId', description: 'rack id', defaultMessage: '{rackid}', values: { rackid: butlerDetails[i].rack_id ? butlerDetails[i].rack_id : '-' }, __source: { fileName: _jsxFileName, lineNumber: 172 }, __self: this }))),
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 173 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 173 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'misplaced.racklocation', description: 'rack location', defaultMessage: '{racklocation}', values: { racklocation: butlerDetails[i].rack_location ? butlerDetails[i].rack_location : '-' }, __source: { fileName: _jsxFileName, lineNumber: 173 }, __self: this }))),
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 174 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 174 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'misplaced.rackface', description: 'rack face', defaultMessage: '{rackface}', values: { rackface: butlerDetails[i].rack_face ? butlerDetails[i].rack_face : '-' }, __source: { fileName: _jsxFileName, lineNumber: 174 }, __self: this })), /* istanbul ignore next */' '),
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 175 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 175 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'misplaced.ppsid', description: 'pps id', defaultMessage: '{ppsid}', values: { ppsid: butlerDetails[i].pps_id ? butlerDetails[i].pps_id : '-' }, __source: { fileName: _jsxFileName, lineNumber: 175 }, __self: this }))),
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 176 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 176 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'misplaced.ppslocation', description: 'pps location', defaultMessage: '{ppslocation}', values: { ppslocation: butlerDetails[i].pps_location ? butlerDetails[i].pps_location : '-' }, __source: { fileName: _jsxFileName, lineNumber: 176 }, __self: this }))));


      botCheckList.push(bots);
    }
    return botCheckList;
  }


  render()
  {
    var checkList = this._processList();

    var butlerdetails = this.props.safetyErrorBotList.length > 0 ? this.props.safetyErrorBotList : this.props.botList;

    var botchecklist = this._processTableList(butlerdetails);

    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-safetylist', __source: { fileName: _jsxFileName, lineNumber: 194 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-modal-content', __source: { fileName: _jsxFileName, lineNumber: 195 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-modal-head', __source: { fileName: _jsxFileName, lineNumber: 196 }, __self: this },
            this.props.emergency_type === /* istanbul ignore next */_frontEndConstants.EMERGENCY_FIRE ?
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-add', __source: { fileName: _jsxFileName, lineNumber: 198 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.firesafety.heading',
                defaultMessage: 'Resume Checklist',
                description: 'Text for safety heading', __source: { fileName: _jsxFileName, lineNumber: 198 }, __self: this })) :

            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-add', __source: { fileName: _jsxFileName, lineNumber: 202 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safety.heading',
                defaultMessage: 'Safety Checklist',
                description: 'Text for fire safety heading', __source: { fileName: _jsxFileName, lineNumber: 202 }, __self: this })),

            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'close', onClick: this._removeThisModal.bind(this), __source: { fileName: _jsxFileName, lineNumber: 206 }, __self: this }, /* istanbul ignore next */'\xD7')),

          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-modal-body', __source: { fileName: _jsxFileName, lineNumber: 208 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'form', /* istanbul ignore next */{ action: '#', id: 'safetyForm', __source: { fileName: _jsxFileName, lineNumber: 209 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-form', __source: { fileName: _jsxFileName, lineNumber: 210 }, __self: this },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-usr-details', __source: { fileName: _jsxFileName, lineNumber: 211 }, __self: this },
                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-safety-hd', __source: { fileName: _jsxFileName, lineNumber: 212 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safety.steps',
                      defaultMessage: 'Check approval steps',
                      description: 'Text for approval steps', __source: { fileName: _jsxFileName, lineNumber: 212 }, __self: this })),
                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-safetysub-head', __source: { fileName: _jsxFileName, lineNumber: 215 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safety.text',
                      defaultMessage: 'Tick every item to confirm that the system is safe to resume operation.',
                      description: 'Text for ticking items', __source: { fileName: _jsxFileName, lineNumber: 215 }, __self: this })),
                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-safety-body', __source: { fileName: _jsxFileName, lineNumber: 218 }, __self: this },
                    this.state.safetyError &&
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-safety-error', __source: { fileName: _jsxFileName, lineNumber: 220 }, __self: this },
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'tab-alert-icon', __source: { fileName: _jsxFileName, lineNumber: 221 }, __self: this }),
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-error-sm', __source: { fileName: _jsxFileName, lineNumber: 222 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safetychecklist.errors',
                          defaultMessage: 'System has detected that one or more of the required conditions have not been fulfilled.  Please try again or contact service engineer for support',

                          description: 'Text for safety error', __source: { fileName: _jsxFileName, lineNumber: 222 }, __self: this }))),


                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'ul', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 228 }, __self: this },
                      checkList.length > 0 ? checkList : ''),

                    butlerdetails.length > 0 ?
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-table', __source: { fileName: _jsxFileName, lineNumber: 232 }, __self: this },
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-heading', __source: { fileName: _jsxFileName, lineNumber: 233 }, __self: this },
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 234 }, __self: this },
                          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 235 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safetychecklistTable.botid', defaultMessage: 'Bot ID', description: 'Bot ID', __source: { fileName: _jsxFileName, lineNumber: 235 }, __self: this }))),

                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 237 }, __self: this },
                          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 238 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safetychecklistTable.rockid', defaultMessage: 'Rack ID', description: 'Rack ID', __source: { fileName: _jsxFileName, lineNumber: 238 }, __self: this }))),

                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 240 }, __self: this },
                          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 241 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safetychecklistTable.rocklocation', defaultMessage: 'Rack location', description: 'Rack location', __source: { fileName: _jsxFileName, lineNumber: 241 }, __self: this }))),

                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 243 }, __self: this },
                          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 244 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safetychecklistTable.rackface', defaultMessage: 'Rack face', description: 'Rack face', __source: { fileName: _jsxFileName, lineNumber: 244 }, __self: this }))),

                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 246 }, __self: this },
                          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 247 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safetychecklistTable.ppsid', defaultMessage: 'PPS ID', description: 'PPS ID', __source: { fileName: _jsxFileName, lineNumber: 247 }, __self: this }))),

                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-instruction-cell', __source: { fileName: _jsxFileName, lineNumber: 249 }, __self: this },
                          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 250 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safetychecklistTable.ppslocation', defaultMessage: 'PPS location', description: 'PPS location', __source: { fileName: _jsxFileName, lineNumber: 250 }, __self: this })))),


                      botchecklist) :
                    ""),


                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'gor-margin-top', __source: { fileName: _jsxFileName, lineNumber: 257 }, __self: this },
                    this.props.emergency_type === /* istanbul ignore next */_frontEndConstants.EMERGENCY_FIRE ?
                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ type: 'submit', className: 'gor-add-btn', disabled: !this.state.allChecked ? true : false,
                        onClick: this._handleSafetyConfirm.bind(this), __source: { fileName: _jsxFileName, lineNumber: 259 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.firesafety.confirm',
                        defaultMessage: 'Resume Operation', description: 'Text for Resume Operation button', __source: { fileName: _jsxFileName, lineNumber: 260 }, __self: this }),
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Spinner2.default, /* istanbul ignore next */{ isLoading: this.props.safetySpinner, setSpinner: this.props.setSafetySpinner, __source: { fileName: _jsxFileName, lineNumber: 262 }, __self: this })) :

                    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'button', /* istanbul ignore next */{ type: 'submit', className: 'gor-add-btn', disabled: !this.state.allChecked ? true : false,
                        onClick: this._handleSafetyConfirm.bind(this), __source: { fileName: _jsxFileName, lineNumber: 264 }, __self: this }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{ id: 'operation.safety.confirm',
                        defaultMessage: 'Confirm', description: 'Text for confirm button', __source: { fileName: _jsxFileName, lineNumber: 265 }, __self: this }),
                      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Spinner2.default, /* istanbul ignore next */{ isLoading: this.props.safetySpinner, setSpinner: this.props.setSafetySpinner, __source: { fileName: _jsxFileName, lineNumber: 267 }, __self: this }))))))))));











  }}


SafetyChecklist.contextTypes = {
  intl: /* istanbul ignore next */_react2.default.PropTypes.object.isRequired };


function mapStateToProps(state, ownProps) {
  return {
    checkList: state.emergency.safetyList || [],
    botList: state.emergency.botList || [],
    safetyErrorList: state.emergency.safetyErrorList || [],
    safetyErrorBotList: state.emergency.safetyErrorBotList || [],
    auth_token: state.authLogin.auth_token,
    modalStatus: state.emergency.hideModal || false,
    safetySpinner: state.spinner.safetySpinner || false,
    system_emergency: state.tabsData.system_emergency || false,
    system_data: state.tabsData.system_data || null,
    breached: state.tabsData.breached,
    fireHazard: state.fireHazardDetail };

}
var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    userRequest: function /* istanbul ignore next */userRequest(data) {dispatch( /* istanbul ignore next */(0, _userActions.userRequest)(data));},
    resetForm: function /* istanbul ignore next */resetForm() {dispatch( /* istanbul ignore next */(0, _validationActions.modalFormReset)());},
    setSafetySpinner: function /* istanbul ignore next */setSafetySpinner(data) {dispatch( /* istanbul ignore next */(0, _spinnerAction.setSafetySpinner)(data));},
    validatingList: function /* istanbul ignore next */validatingList(data) {dispatch( /* istanbul ignore next */(0, _validationActions.validatingList)(data));} };

};
SafetyChecklist.propTypes = {
  auth_token: /* istanbul ignore next */_react2.default.PropTypes.string,
  username: /* istanbul ignore next */_react2.default.PropTypes.string,
  modalStatus: /* istanbul ignore next */_react2.default.PropTypes.bool,
  checkList: /* istanbul ignore next */_react2.default.PropTypes.array,
  safetyErrorList: /* istanbul ignore next */_react2.default.PropTypes.array,
  safetySpinner: /* istanbul ignore next */_react2.default.PropTypes.bool,
  system_emergency: /* istanbul ignore next */_react2.default.PropTypes.bool,
  system_data: /* istanbul ignore next */_react2.default.PropTypes.string,
  userRequest: /* istanbul ignore next */_react2.default.PropTypes.func,
  setSafetySpinner: /* istanbul ignore next */_react2.default.PropTypes.func,
  resetForm: /* istanbul ignore next */_react2.default.PropTypes.func }; /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SafetyChecklist);