/* istanbul ignore next */'use strict';var /* istanbul ignore next */_sysOverViewActions = require('../../../actions/sysOverViewActions'); /* istanbul ignore next */var actions = _interopRequireWildcard(_sysOverViewActions);
var /* istanbul ignore next */_frontEndConstants = require('../../../constants/frontEndConstants'); /* istanbul ignore next */var CONSTANTS = _interopRequireWildcard(_frontEndConstants); /* istanbul ignore next */function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];}}newObj.default = obj;return newObj;}}

describe('actions', () => {
  it('should create an action to recieve zoning header data', () => {
    const data = {
      "complete_data": {
        "zones_data": {
          "1": {
            "zone_status": "operation_normal" },

          "2": {
            "zone_status": "emergency_pause" },

          "3": {
            "zone_status": "emergency_stop" },

          "4": {
            "zone_status": "zone_pause_activated" },

          "5": {
            "zone_status": "zone_clear_initiated" },

          "6": {
            "zone_status": "zone_pause_initiated" },

          "7": {
            "zone_status": "zone_clear_activated" },

          "8": {
            "zone_status": "zone_clear_deactivated" } },


        "emergency_data": {
          "emergency_on": false,
          "emergency_type": "stop" } },


      "resource_type": "zones" };

    const expectedAction = {
      type: CONSTANTS.ZONE_DATA,
      data };

    expect(actions.recieveSysOverViewData(data)).toEqual(expectedAction);
  });


});