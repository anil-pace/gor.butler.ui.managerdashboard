/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.







ShowError = ShowError;var /* istanbul ignore next */_loginAction = require('../actions/loginAction');var /* istanbul ignore next */_utilityActions = require('../actions/utilityActions');var /* istanbul ignore next */_frontEndConstants = require('../constants/frontEndConstants');var /* istanbul ignore next */_messageConstants = require('../constants/messageConstants');var /* istanbul ignore next */_validationActions = require('../actions/validationActions');var /* istanbul ignore next */_spinnerAction = require('../actions/spinnerAction');var /* istanbul ignore next */_ppsConfigurationActions = require('./../actions/ppsConfigurationActions');function ShowError(store, cause, status)
{
	console.log('In Error utility');
	switch (status) {

		case 400:
			store.dispatch( /* istanbul ignore next */(0, _validationActions.notifyFail)( /* istanbul ignore next */_messageConstants.ERR_400));
			break;
		case 401:
			if (cause === /* istanbul ignore next */_frontEndConstants.AUTH_LOGIN)
			{
				store.dispatch( /* istanbul ignore next */(0, _loginAction.setLoginSpinner)(false));
				store.dispatch( /* istanbul ignore next */(0, _validationActions.loginError)( /* istanbul ignore next */_messageConstants.NO_NET));
			} else

			{
				store.dispatch( /* istanbul ignore next */(0, _validationActions.notifyFail)( /* istanbul ignore next */_messageConstants.ERR_401));
			}
			break;
		case 403:
			store.dispatch( /* istanbul ignore next */(0, _validationActions.notifyFail)( /* istanbul ignore next */_messageConstants.ERR_403));
			break;
		case 405:
			store.dispatch( /* istanbul ignore next */(0, _validationActions.notifyFail)( /* istanbul ignore next */_messageConstants.ERR_405));
			break;
		case 408:
			store.dispatch( /* istanbul ignore next */(0, _validationActions.notifyFail)( /* istanbul ignore next */_messageConstants.ERR_408));
			break;
		case 409:
			store.dispatch( /* istanbul ignore next */(0, _validationActions.notifyFail)( /* istanbul ignore next */_messageConstants.ERR_409));
			break;
		case 500:
			store.dispatch( /* istanbul ignore next */(0, _validationActions.notifyFail)( /* istanbul ignore next */_messageConstants.ERR_500));
			break;
		case 502:
			store.dispatch( /* istanbul ignore next */(0, _validationActions.notifyFail)( /* istanbul ignore next */_messageConstants.ERR_502));
			break;
		default:
			store.dispatch( /* istanbul ignore next */(0, _validationActions.notifyFail)( /* istanbul ignore next */_messageConstants.ERR_CONNECT));}

	if (cause === /* istanbul ignore next */_frontEndConstants.MASTER_FILE_UPLOAD) {
		store.dispatch( /* istanbul ignore next */(0, _utilityActions.uploadMasterDataProcessing)(false));
	}
	if (cause === /* istanbul ignore next */_frontEndConstants.DOWNLOAD_STOCK_LEDGER_REPORT) {
		store.dispatch( /* istanbul ignore next */(0, _spinnerAction.setStockLedgerSpinner)(false));
	}
	if (cause === /* istanbul ignore next */_frontEndConstants.DOWNLOAD_STOCK_LEDGER_RAW_TRANSACTIONS_REPORT) {
		store.dispatch( /* istanbul ignore next */(0, _spinnerAction.setStockLedgerRawTransactionsSpinner)(false));
	}
	if (cause === /* istanbul ignore next */_frontEndConstants.PPS_PROFILE_REQUESTED) {
		store.dispatch( /* istanbul ignore next */(0, _ppsConfigurationActions.profileRequested)({}));
	}
}