/* istanbul ignore next */"use strict";Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = "/Users/raja.d/GOR/gor.butler.ui.managerdashboard/src/components/utilityComponents/downloadGRTile.js";var /* istanbul ignore next */_react = require("react"); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactIntl = require("react-intl");
var /* istanbul ignore next */_utilityDropdownWrap = require("./utilityDropdownWrap"); /* istanbul ignore next */var _utilityDropdownWrap2 = _interopRequireDefault(_utilityDropdownWrap);
var /* istanbul ignore next */_listItem = require("../list/listItem"); /* istanbul ignore next */var _listItem2 = _interopRequireDefault(_listItem);
var /* istanbul ignore next */_configConstants = require("../../constants/configConstants");
var /* istanbul ignore next */_frontEndConstants = require("../../constants/frontEndConstants"); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

const messages = /* istanbul ignore next */(0, _reactIntl.defineMessages)({
  downloadRprtsStatusHead: {
    id: "utility.downloadGRN.status.heading",
    description: "GRN Status",
    defaultMessage: "GRN Status" },

  downloadGrnStnPlaceHolder: {
    id: "utility.downloadGRN.stnPlaceholder",
    description: "Enter STN Number",
    defaultMessage: "Enter STN Number" },

  downloadGrnSelectFormatPlaceHolder: {
    id: "utility.downloadGRN.formatPlaceholder",
    description: "Enter STN Number",
    defaultMessage: "Select File type" },

  downloadGrnLink: {
    id: "utility.reportsHistory.clickToDownload",
    description: "file name",
    defaultMessage: "Click here to download " } });



class DownloadGRNTile extends /* istanbul ignore next */_react2.default.Component {
  constructor(props) {
    super(props);
    this.state = {
      invoiceId: null,
      fileType: null };

  }

  _changeGRNFileType(data) {
    this.setState({ fileType: data.value });
  }
  _getCurrentDropDownState(fileType, currentValue) {
    for (var i = fileType.length - 1; i >= 0; i--) {
      if (fileType[i].value === currentValue) {
        return fileType[i].label;
      }
    }
    return null;
  }
  _generateGRN() {
    if (this.props.generateReport) {
      this.props.generateReport(this.state.fileType, this.state.invoiceId);
    } else {
      throw new Error("Could not get the callback here!");
    }
  }

  _captureQuery(e) {
    if (e.target.value) {
      this.setState({ invoiceId: e.target.value });
    }
  }

  _renderDownloadGRN(reportsHistory) {
    var result = [];

    // pushing then the list items
    if (reportsHistory.constructor !== Array && reportsHistory.length < 0) {
      //no history of files present from the backend
      return result;
    }
    for (let i = 0; i < reportsHistory.length; i++) {
      let listItem =
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_listItem2.default, /* istanbul ignore next */{ index: i, key: "listItem" + i, __source: { fileName: _jsxFileName, lineNumber: 75 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-inline", __source: { fileName: _jsxFileName, lineNumber: 76 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-utility-master-h1", __source: { fileName: _jsxFileName, lineNumber: 77 }, __self: this },
            reportsHistory[i].file_url ?
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"a", /* istanbul ignore next */{ href: reportsHistory[i].file_url, download: /* istanbul ignore next */true, __source: { fileName: _jsxFileName, lineNumber: 79 }, __self: this },
              this.context.intl.formatMessage(messages.downloadGrnLink)) :

            ""),

          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-inline gor-utility-master-h2", __source: { fileName: _jsxFileName, lineNumber: 84 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
              id: "utility.uploadHist.success",
              description: "Status ",
              defaultMessage: "Status: {status}",
              values: { status: reportsHistory[i].status }, __source: { fileName: _jsxFileName, lineNumber: 85 }, __self: this }))),



        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-inline gor-utility-master-h2", __source: { fileName: _jsxFileName, lineNumber: 93 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedDate, /* istanbul ignore next */{
            value: new Date(reportsHistory[i].create_time),
            month: "short",
            day: "2-digit",
            hour: "2-digit",
            minute: "2-digit",
            timeZone: this.props.timeOffset, __source: { fileName: _jsxFileName, lineNumber: 94 }, __self: this })));




      result.push(listItem);
    }
    if (result.length === 0) {
      let listItem = /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_listItem2.default, /* istanbul ignore next */{ index: 0, key: "listItem" + 0, __source: { fileName: _jsxFileName, lineNumber: 108 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-inline", __source: { fileName: _jsxFileName, lineNumber: 109 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-utility-master-h1", __source: { fileName: _jsxFileName, lineNumber: 110 }, __self: this },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-utility-no-history-found", __source: { fileName: _jsxFileName, lineNumber: 111 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
                id: "utility.uploadHist.noresultfound",
                description: "Status ",
                defaultMessage: "No Result Found", __source: { fileName: _jsxFileName, lineNumber: 112 }, __self: this }))),




          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-inline gor-utility-master-h2", __source: { fileName: _jsxFileName, lineNumber: 120 }, __self: this })),


        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-inline gor-utility-master-h2", __source: { fileName: _jsxFileName, lineNumber: 123 }, __self: this }));


      result.push(listItem);
    }
    return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-utility-history-container", __source: { fileName: _jsxFileName, lineNumber: 128 }, __self: this }, result));
  }
  shouldComponentUpdate(nextProps, nextState) {
    if (
    JSON.stringify(this.props.reportsHistory) ===
    JSON.stringify(nextProps.reportsHistory))
    {
      return true;
    } else {
      return false;
    }
  }

  render() {
    const fileType = [
    { value: "csv", label: "Comma separated values (csv)" },
    {
      value: "xlsx",
      label: "ExceL Spreadsheet (xlsx)" }];



    let currenFileType = this.state.fileType ?
    this._getCurrentDropDownState(fileType, this.state.fileType) :
    null;
    let reportsHistory = this._renderDownloadGRN(this.props.grnHistory);
    return (
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 155 }, __self: this },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-utility-invoice-h1", __source: { fileName: _jsxFileName, lineNumber: 156 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
            id: "utility.downloadGRN.label",
            description: "STN number:",
            defaultMessage: "STN number:", __source: { fileName: _jsxFileName, lineNumber: 157 }, __self: this })),


        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-audit-input-wrap gor-utility-invoice-wrap", __source: { fileName: _jsxFileName, lineNumber: 163 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"input", /* istanbul ignore next */{
            className: "gor-audit-input gor-input-ok",
            placeholder: this.context.intl.formatMessage(
            messages.downloadGrnStnPlaceHolder),

            ref: node => {
              this.invoiceId = node;
            },
            onChange: this._captureQuery.bind(this), __source: { fileName: _jsxFileName, lineNumber: 164 }, __self: this }),

          this.props.validatedInvoice ?
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-login-error", __source: { fileName: _jsxFileName, lineNumber: 175 }, __self: this }) :
          ""),

        this.props.validatedInvoice ?
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-sku-error gor-utility-error-invoice", __source: { fileName: _jsxFileName, lineNumber: 179 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
            id: "utility.downloadGRN.stnError",
            description: "Please enter correct STN number",
            defaultMessage: "Please enter correct STN number", __source: { fileName: _jsxFileName, lineNumber: 180 }, __self: this })) :


        "",
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_utilityDropdownWrap2.default, /* istanbul ignore next */{
          items: fileType,
          dropdownLabel: "File format",
          placeHolderText: this.context.intl.formatMessage(
          messages.downloadGrnSelectFormatPlaceHolder),

          changeMode: this._changeGRNFileType.bind(this),
          currentState: currenFileType, __source: { fileName: _jsxFileName, lineNumber: 187 }, __self: this }),

        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-utility-btn-wrap", __source: { fileName: _jsxFileName, lineNumber: 196 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"button", /* istanbul ignore next */{
              onClick: this._generateGRN.bind(this),
              className:
              this.state.invoiceId && this.state.fileType ?
              "gor-download-button" :
              "gor-download-button gor-disable-content", __source: { fileName: _jsxFileName, lineNumber: 197 }, __self: this },


            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"label", /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 205 }, __self: this },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
                id: "utility.downloadGRN.head",
                description: "Generate Report",
                defaultMessage: "Generate Report", __source: { fileName: _jsxFileName, lineNumber: 206 }, __self: this })))),




        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"div", /* istanbul ignore next */{ className: "gor-utility-body-header", __source: { fileName: _jsxFileName, lineNumber: 214 }, __self: this },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */{
            id: "utility.downloadGRN.history",
            description: "Report History",
            defaultMessage: "Report History", __source: { fileName: _jsxFileName, lineNumber: 215 }, __self: this })),


        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */"h1", /* istanbul ignore next */{ __source: { fileName: _jsxFileName, lineNumber: 221 }, __self: this },
          this.context.intl.formatMessage(messages.downloadRprtsStatusHead)),

        reportsHistory));


  }}


DownloadGRNTile.contextTypes = {
  intl: /* istanbul ignore next */_react2.default.PropTypes.object.isRequired }; /* istanbul ignore next */exports.default =


DownloadGRNTile;